<?php $_F=__FILE__;$_C1767279132='Pz48P0RoRCANCg0KYWRmeHFkICRIaE5mREg7DQoNCmp0bUdIQmZtIE5xcmdfV05VQnFfcmhmUEhHZlVOKCAkcUhIciApIHsNCgkNCkJqICggTldhX2FOSF9kQkdfZkRIQmZtKCAnTldhRFBmX2RCR05tck5fQm1qZicsICdOV2FfZEJHTm1yTl9ySHFIdHInLCAnQm1vcWRCVScgICkJPT0gJ0Jtb3FkQlUnICkgew0KCWZ4X3JIcVBIKCk7DQoJTldhX2pQZm1IX2RCR05tck5fbWZIQmpnKCk7DQoJJEdmbUhObUggPSBmeF9hTkhfR2ROcW0oKTsNCglQTkh0UG0gJEdmbUhObUg7DQoJUE5IdFBtIGpxZHJOOw0KfQkNCg0KQmogKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfVUJyTm1fRGR0YScgKSA9PSAnRScgKSB7DQoNCgkgIE5jSFBxR0goIHJoZlBIR2ZVTl9xSEhyKCBxUFBxZygNCiAgICAgICdHcUgnID0+IC1FLA0KCSAgJ0dmZCcgPT4gJycsDQoJICAnckJwTicgPT4gJycsDQoJICAncWRCYW0nID0+ICcnLA0KCSAgJ1dxUDEnID0+ICcnLA0KCSAgJ3JIZ2ROJyA9PiAnJywNCgkgICdHV2ZVTicgPT4gJycsDQoJICAncEdyJyA9PiAnJywJICAJICAJCSAgDQoJICAnV05VJyA9PiAtRQ0KICAgKSwgJHFISHIgKSApOwkNCiAgIA0KICAgZnhfckhxUEgoKTsJDQogICANCiREcWFOVSA9ICggYU5IXzB0TlBnX29xUCggJ0RxYU5VJyApICkgPyBhTkhfMHROUGdfb3FQKCAnRHFhTlUnICkgOiBFOyAvLyBqZlAgRHFhQm1xSEJmbQ0KDQpCaiAoICRXTlUgPD0gJ3knICYmICRHcUggPiAneScgKSB7DQoJDQokTldhcVBhciA9IHFQUHFnKCANCiAgICAnRGZySF9IZ0ROJyA9PiAnTnFyZ1dOVUJxYXFkZE5QZycsDQogICAgJ3JoZjNEZnJIcicgPT4gLUUsDQoJJ0RmckhyX0ROUF9EcWFOJyA9PiAtRSwNCgknZlBVTlB4ZycgPT4gJ1dObXRfZlBVTlAnLA0KICAgICdmUFVOUCcgPT4gJ0EyNycsDQogICAgJ0hxY18wdE5QZycgPT4gcVBQcWcoDQogICAgICAgIHFQUHFnKA0KICAgICAgICAgICAgJ0hxY2ZtZldnJyA9PiAnTldOVUJxYXFkZE5QZycsDQogICAgICAgICAgICAnSE5QV3InID0+ICRHcUgsDQogICAgICAgICAgICAnakJOZFUnID0+ICdITlBXX0JVJywNCiAgICAgICAgKQ0KICAgICksDQopOwkNCn0NCg0KTmRyTiBCaiAoICRHcUggPD0gJ3knICYmICRXTlUgPiAneScgKSB7DQoJJGptZEJVID0gTmNEZGZVTigiLCIsICRXTlUpOw0KCQ0KCSROV2FxUGFyID0gcVBQcWcoDQoJJ0RmckhfX0JtJyA9PiAkam1kQlUsIA0KCSdEZnJIX0hnRE4nID0+ICdOcXJnV05VQnFhcWRkTlBnJywNCgknRGZySHJfRE5QX0RxYU4nID0+IC1FLA0KCSdmUFVOUCcgPT4gJ0EyNycsDQoJJ2ZQVU5QeGcnID0+ICdXTm10X2ZQVU5QJywNCiAgCSdEcWFOVScgPT4gJERxYU5VDQoJKTsNCgl9DQoNCiRVTmpqX0JXYV9kQldCSCA9IE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9CV2FfckJwTl9kQldCSCcgKTsgLy8gYU5IIEhoTiBVTmpxdGRIIEJXcWFOIHJCcE4gZEJXQkgNCiRIaE5mREggPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfalBXX3JCcE4nICk7DQokcmhmM3hxVWFOID0gTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX1VCck5tX3JoZjNHbUhQSGh0V3gnICk7IA0KDQovLyB1cXBndWZxVSBXZlVOIC8gIHNmDQpCaiAoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9kcXBnZGZxVScgKSA9PSAnRScgKSB7DQoJJEJyZHFwZyA9ICdVcUhxLWZQQmFCbXFkJzsNCgkkRGRHaGRVUCA9ICdyUEc9IicuRGR0YUJtcl90UGQoICdCV3FhTnIvSFBxbXIuRG1hJyAsIF9faVl1WF9fICkuJyInOw0KCX0gTmRyTiB7DQoJCSRCcmRxcGcgPSAnclBHJzsNCgkJJERkR2hkVVAgPSAnJzsNCgl9DQoNCi8vIDd0ckhmVyA3UGZEIEAyQm1HTiBFLlMueS5iDQpCaiAoICRHV2ZVTiAhPSAnJyApIHsNCgkkR1dmVU4gPSAkR1dmVU47DQoJfSBOZHJOIHsNCgkJJEdXZlVOID0gTldhX3JkdGFfSGZfbXFXTiggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX0hodFd4R1BmRCcgKSApOyAgDQoJfQ0KCQ0KLy8gN3RySGZXIHZmZlcsIDdQZkQgJiAyR3FkTiBAMkJtR04gRS5TLnkubA0KQmogKCAkcEdyICE9ICcnICkgew0KCSRwR3IgPSAkcEdyOw0KCX0gTmRyTiB7DQoJCSRwR3IgPSBOV2FfcmR0YV9IZl9tcVdOKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfSGh0V3hwR3InICkgKTsgIA0KCX0JDQoNCi8vIDd0ckhmVyBHZmR0V21yIGpCZEhOUAkNCkJqICggJEdmZCA+IHkgKSB7DQoJJG10V19HZmRyID0gJEdmZDsgLy8gck5IIEhoTiBtdFd4TlAgZmogR2ZkdFdtciBoTlBODQoJfSBOZHJOIHsNCgkJJG10V19HZmRyID0gTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX0dmZHRXbXInICk7IC8vIHJOSCBIaE4gbXRXeE5QIGZqIEdmZHRXbXIgaE5QTgkNCgl9DQoJDQovLyA3dHJIZlcgR2ZkdFdtciBBZEJhbQkNCkJqICggJHFkQmFtICE9ICcnICkgew0KCSRHdHJfcWRCYW0gPSAkcWRCYW07DQoJfSBOZHJOIHsNCgkJJEd0cl9xZEJhbSA9IHJIUEhmZGYzTlAoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9xZEJhbXJIZ2ROJyApICk7IC8vIHJOSCBXTlVCcSBxZEJhbQkNCgl9DQoJDQovLyA3dHJIZlcgMkhnZE4JCQ0KQmogKCAkckhnZE4gIT0gJycgKSB7DQoJQmogKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfVUJyTm1fckhnZE5fV3FtJyApID09ICdFJyApIHsNCgkkR3RyX3JIZ2ROID0gdEdqQlBySCggJHJIZ2ROICk7DQoJCX0gTmRyTiB7ICRHdHJfckhnZE4gPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfeGZjX3JIZ2ROJyApOyB9DQoJfSBOZHJOIHsNCgkJJEd0cl9ySGdkTiA9IE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV94ZmNfckhnZE4nICk7DQoJfQkJDQoNCi8vIDd0ckhmVyByQnBOIGpCZEhOUAkNCglCaiAoICRyQnBOICE9ICcnICkgew0KCQkkckJwTm9xZCA9IE5jRGRmVU4oIiwiLCAkckJwTik7DQoJCQlCaiAoICRyQnBOb3FkW3ldID4geSAmJiAkckJwTm9xZFtFXSA+IHkgJiYgQnJfbXRXTlBCRyggJHJCcE5vcWRbeV0gKSAmJiBCcl9tdFdOUEJHKCAkckJwTm9xZFtFXSApICkgeyANCgkJCQkkQlczQlVIaCA9ICRyQnBOb3FkW3ldOw0KCQkJCSRCV2hOQmFoSCA9ICRyQnBOb3FkW0VdOw0KCQkJfSBOZHJOIHsNCgkJCQkkQlczQlVIaCA9IHJIUEJEcmRxcmhOciggJEhoTmZESFsnM0JVSGgnXSApOw0KCQkJCSRCV2hOQmFoSCA9IHJIUEJEcmRxcmhOciggJEhoTmZESFsnaE5CYWhIJ10gKTsNCgkJCQl9CQ0KCQkJfQ0KCU5kck4gew0KCQkkQlczQlVIaCA9IHJIUEJEcmRxcmhOciggJEhoTmZESFsnM0JVSGgnXSApOw0KCQkkQldoTkJhaEggPSBySFBCRHJkcXJoTnIoICRIaE5mREhbJ2hOQmFoSCddICk7DQoJfQ0KCQ0KJE5XYV8wdE5QZyA9IG1OMyA4UV96dE5QZyggJE5XYXFQYXIgKTsNCkJqICggJE5XYV8wdE5QZy0+aHFvTl9EZnJIcigpICk6DQokV05VQnF0bUIwdE5CVSA9IE5XYVZxbVVmVzJIUEJtYSh3KTsgLy9WcW1VZlcgR2RxcnIgamZQIGpCSEpOY0gNCiANCi8qDQpOR2hmJzxyR1BCREggSGdETj0iSE5jSC9rcW9xckdQQkRIIj4NCgkoanRtR0hCZm0oJCx0bVVOakJtTlUpew0KCSAkKFVmR3RXTm1IKS5QTnFVZyhqdG1HSEJmbSgpIHsNCgkkKCIuJy4kV05VQnF0bUIwdE5CVS4nIikuakJISk5jSChFLkUseyBXcWNpZm1IMkJwTjogIkVDRGMiIH0pOw0KCX0pOw0KCSAgICB9KShrenROUGcpOw0KCQk8L3JHUEJESD4nOyAqLw0KCQkNCk5HaGYgJzxVQm8gR2RxcnI9IkRxYTNQcUQtJy4kV05VQnF0bUIwdE5CVS4nIiBCVT0iTldhckJtYSI+PFVCbyBCVT0icWRCYW1ySGdkTiIgR2RxcnI9Ik5xcmdXTlVCcV8nLiRHdHJfcWRCYW0uJyI+JzsNCiAgamZQICggJEI9RSA7ICRCIDw9ICRtdFdfR2ZkcjsgJEIrKyApIDoNCiAgICBOR2hmICc8VUJvIEJVPSJHZmQtJy4kQi4nIiBHZHFycj0iSGhOR2ZkIj4nOw0KICAgICRHZnRtSE5QID0gJG10V19HZmRyICsgRSAtICRCOw0KCQ0KCTNoQmROICggJE5XYV8wdE5QZy0+aHFvTl9EZnJIcigpICkgOiAkTldhXzB0TlBnLT5IaE5fRGZySCgpOw0KDQoJCS8vJEJXcWFOID0gM0RfYU5IX3FISHFHaFdObUhfdFBkKCBhTkhfRGZySF9IaHRXeG1xQmRfQlUoIGFOSF9IaE5fQlUoKSApICk7DQoJCS8vJEJXcWFOID0gYU5IX0hoTl9EZnJIX0hodFd4bXFCZCggYU5IX0hoTl9CVSgpLCAnM2ZQMS1xVVdCbS1IaHRXeCcgKSA7DQoJCSRCV3FhTiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfQldhJywgSFB0TiApOw0KCQkkV05VQnFISGQgPSBOckdfaEhXZCggTnJHX2tyKCBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX0hCSGROJywgSFB0TiApICkgKTsgJFdOVUJxSEhkID0gckhQQkRyZHFyaE5yKCRXTlVCcUhIZCk7CQkJDQoJCSRXTlVCcUhnRE4gPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX0hnRE4nLCBIUHROICk7DQoJCSRCcm9CVXJCcE4gPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX29CVU5mX3JCcE4nLCBIUHROICk7DQoJCSRCcldxRHJCcE4gPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX2FXcURfckJwTicsIEhQdE4gKTsNCgkJJGFxZGROUGdCVSA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYXFkZE5QZ19CVScsIEhQdE4gKTsJDQoJCSRCclBOckJwTiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYXFkZE5QZ19mREhFJywgSFB0TiApOw0KCQkkQnJQTnJCcE5FID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9CV3FhTl9mREhFJywgSFB0TiApOw0KCQkkdHJOYXFkZE5QZ0JtamYgPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX2FxZGROUGdfZkRIQycsIEhQdE4gKTsNCgkJJGRCbTFfSGdETiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfZEJtMV9mREhFJywgSFB0TiApOw0KCQkkSGhORGZySEJVID0gYU5IX0hoTl9CVSgpOw0KCQkNCgkJCUJqICggJEJXcWFOID09ICcnICkgew0KCQkJCSRCV3FhTiA9IERkdGFCbXJfdFBkKCAnQldxYU5yL21mLUJXcWFOLXFvcUJkcXhkTi5rRGEnICwgX19pWXVYX18gKSA7DQoJCQkJfQ0KCQkJCU5kck4gew0KCQkJCQkkQldxYU4gPSAkQldxYU47DQoJCQkJCX0NCg0KCQlyM0JIR2ggKCAkV05VQnFIZ0ROICkgew0KCQkJR3FyTiAnMkJtYWROIFlXcWFOJzoNCgkJCQkNCgkJCQlCaiAoIHhxck5tcVdOKCAkQldxYU4gKSA9PSAnbWYtQldxYU4tcW9xQmRxeGROLmtEYScgKSB7DQoJCQkJCSRXTlVCcWRCbTEgPSAkQldxYU47DQoJCQkJfQ0KCQkJCQlOZHJOIHsNCgkJCQkkcUhIQlUgPSAzRF9hTkhfcUhIcUdoV05tSF9CV3FhTl9yUEcoIE5XYV9hTkhfcUhIcUdoV05tSF9CVV9qUGZXX3JQRyggJEJXcWFOICksICdqdGRkJyApOw0KCQkJCSRXTlVCcWRCbTEgPSBOcXJnV05VQnFfQldhUE5yQnBOKCAkcUhIQlVbeV0sICRVTmpqX0JXYV9kQldCSCwgJEJyUE5yQnBORSwgJHFISEJVW0VdLCAkcUhIQlVbQ10gKTsNCgkJCQkkV05VQnFkQm0xID0gTmNEZGZVTigiLCIsICRXTlVCcWRCbTEpOyAkV05VQnFkQm0xID0gJFdOVUJxZEJtMVt5XTsNCgkJCQkJfQ0KCQkJCQlCaiAoICRXcVAxICkgew0KCQkJCSRIaE5QTmRkID0gIk5xcmdXTlVCcVsiIC4kV3FQMS4iXSI7DQoJCQkJfSBOZHJOIHsNCgkJCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxIjsNCgkJCQkJfQ0KCQkJCQ0KCQkJCQ0KCSAgICAJeFBOcTE7DQoJCQkNCgkJCUdxck4gJ1p0ZEhCRGROIFlXcWFOciAoMmRCVU5QKSc6DQoJCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxWyIuJGFxZGROUGdCVS4iXSI7DQoJCQkJJEJXcWFOciA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYXFkZE5QZycsIEhQdE4gKTsNCgkJCQkNCgkJCWZ4X3JIcVBIKCk7DQoJCQkJQmogKCBCcl9xUFBxZyggJEJXcWFOciApICkgew0KCQkJCQkkQmEgPSB5Ow0KCQkJCQlOR2hmICc8VUJvIEJVPSJOcXJnV05VQnFfYXFkZE5QZ0dmbUhxQm1OUC0nLiRXTlVCcXRtQjB0TkJVLiciIHJIZ2ROPSJVQnJEZHFnOm1mbU4iPic7DQoJCQkJCWpmUE5xR2goICRCV3FhTnIgcXIgJEJXYV9CVSApIHsNCgkJCQkJCQ0KCQkJCQkJCS8vN2hxbWFOZGZhIG9OUHJCZm0gRS5iLkUuYiA9PiAyTkggRXJIIFlXcWFOIG5xZGROUGcNCgkJCQkJCQlCaigkQmErKyA9PSB5KSB7DQoJCQkJCQkJCSRCV2EgPSAzRF9hTkhfcUhIcUdoV05tSF9CV3FhTl9yUEcoJEJXYV9CVSwgJ2p0ZGQnKTsNCgkJCQkJCQkJJGpQckhCV2EgPSAkQldhX0JVOw0KCQkJCQkJCQkkV05VQnFkQm0xID0gTnFyZ1dOVUJxX0JXYVBOckJwTiggJEJXYVt5XSwgJFVOampfQldhX2RCV0JILCAkQnJQTnJCcE4sICRCV2FbRV0sICRCV2FbQ10gKTsNCgkJCQkJCQkJJFdOVUJxZEJtMSA9IE5jRGRmVU4oIiwiLCAkV05VQnFkQm0xKTsgJFdOVUJxZEJtMSA9ICRXTlVCcWRCbTFbeV07DQoJCQkJCQkJCX0NCgkJCQkJCQkJCQkJCQkJCQkNCgkJCQkJCSRCV2EgPSAzRF9hTkhfcUhIcUdoV05tSF9CV3FhTl9yUEcoJEJXYV9CVSwgJ2p0ZGQnKTsNCgkJCQkJCSRCV2FfdFBkID0gTnFyZ1dOVUJxX0JXYVBOckJwTiggJEJXYVt5XSwgJFVOampfQldhX2RCV0JILCAkQnJQTnJCcE4sICRCV2FbRV0sICRCV2FbQ10gKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICRCV2FfdFBkID0gTmNEZGZVTigiLCIsICRCV2FfdFBkKTsgPz4NCiAgICAgICAgICAgICAgICAJPHEgR2RxcnI9Ijw/RGhEIE5HaGYgJEhoTkRmckhCVTsgPz4tPD9EaEQgTkdoZiAkQldhX0JVOyA/PiIgaFBOaj0iPD9EaEQgTkdoZiAkQldhX3RQZFt5XTsgPz4iIFBOZD0iPD9EaEQgTkdoZiAkSGhOUE5kZDsgPz4iPjwvcT4NCiAgICAgICAgICAgIAkJPD9EaEQNCgkJCQkJJEJXYUdmdG1IID0gJEJhOw0KCQkJCX0gTkdoZiAnPC9VQm8+JzsgfQ0KCQkJCU5kck4gew0KCQkJCU5HaGYgJzxVQm8gckhnZE49IlVCckRkcWc6bWZtTiI+PC9VQm8+JzsNCgkJCQl9DQoJCSRhcWRkTiA9IGZ4X2FOSF9HZE5xbSgpOw0KCQlCaiAoJEJXYUdmdG1IIDw9IEUpIHskcmZQbSA9ICBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfR2Z0bUhyQm1hJyApO30gTmRyTiB7JHJmUG0gPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfR2Z0bUhEZHRQcWQnICk7fQ0KDQoJCQl4UE5xMTsJCQkNCgkJCQ0KCQkJR3FyTiAnTEJVTmYnOg0KCQkJCSRvQlVHZm9OUCA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfQldhJywgSFB0TiApOw0KCQkJCSRvQlVkQm0xRSA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfb0JVTmYnLCBIUHROICk7DQoJCQkJJG9CVWRCbTFDID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9vQlVOZl8zTnhXJywgSFB0TiApOw0KCQkJCSRvQlVkQm0xYiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfb0JVTmZfZmFhJywgSFB0TiApOw0KDQoJCQkJQmogKCAkb0JVZEJtMUUgIT0gJycgKSB7ICRvQlVkQm0xRSA9ICRvQlVkQm0xRTt9IE5kck4geyRvQlVkQm0xRSA9ICctJzt9DQoJCQkJQmogKCAkb0JVZEJtMUMgIT0gJycgKSB7ICRvQlVkQm0xQyA9ICRvQlVkQm0xQzt9IE5kck4geyRvQlVkQm0xQyA9ICctJzt9DQoJCQkJQmogKCAkb0JVZEJtMWIgIT0gJycgKSB7ICRvQlVkQm0xYiA9ICRvQlVkQm0xYjt9IE5kck4geyRvQlVkQm0xYiA9ICctJzt9DQoJCQkJQmogKCAkb0JVR2ZvTlAgIT0gJycgKSB7ICRvQlVHZm9OUCA9ICRvQlVHZm9OUDt9IE5kck4geyRvQlVHZm9OUCA9ICctJzt9DQoJCQkJDQoJCQkJDQoJDQoJCQkJQmogKCBEcUhoQm1qZigkb0JVZEJtMUUsIFFBSlRZc2lNX1hSSlhzMllNcykgPT0gJ1dEZScgfHwgRHFIaEJtamYoJG9CVWRCbTFDLCBRQUpUWXNpTV9YUkpYczJZTXMpID09ICczTnhXJyB8fCBEcUhoQm1qZigkb0JVZEJtMWIsIFFBSlRZc2lNX1hSSlhzMllNcykgPT0gJ2ZhbycgfHwgRHFIaEJtamYoJG9CVWRCbTFFLCBRQUpUWXNpTV9YUkpYczJZTXMpID09ICczV28nKSB7DQoJCQkJCSRXTlVCcWRCbTEgPSAkb0JVZEJtMUUuJyNOV2EjJy4kb0JVZEJtMUMuJyNOV2EjJy4kb0JVZEJtMWIuJyNOV2EjJy5OV2FfUE5EZHFHTl9OY0hObXJCZm0oJG9CVUdmb05QKTsgfQ0KCQkJCQlOZHJOIHsNCgkJCQkJCSRXTlVCcWRCbTEgPSAkb0JVZEJtMUU7IH0NCg0KCQkJCQ0KCQlCaiAoICRXTlVCcUhnRE4gPT0gJ0xCVU5mJyAmJiAkQnJvQlVyQnBOID09ICdmamonICkgew0KCQkJJEd0cm9CVTMgPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX29CVU5mX3JCcE5fb0JVMycsIEhQdE4gKTsNCgkJCSRHdHJvQlVoID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9vQlVOZl9yQnBOX29CVWgnLCBIUHROICk7DQoJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnFbIi4kR3Ryb0JVMy4iICIgLiRHdHJvQlVoLiJdIjsNCgkJCX0NCgkJTmRyTkJqICggJFdOVUJxSGdETiA9PSAnTEJVTmYnICYmICRCcm9CVXJCcE4gPT0gJ2ZtJyApIHsNCgkJCSRhTkhxUFBnID0gTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX29CVV9yQnBOJyApOw0KCQkJJFVOam9CVTMgPSBySFBCRHJkcXJoTnIoICRhTkhxUFBnWyczQlVIaCddICk7DQoJCQkkVU5qb0JVaCA9IHJIUEJEcmRxcmhOciggJGFOSHFQUGdbJ2hOQmFoSCddICk7DQoJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnFbIi4kVU5qb0JVMy4iICIgLiRVTmpvQlVoLiJdIjsNCgkJCX0NCgkJTmRyTiB7DQoJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnEiOw0KCQkJfQkJCQkNCg0KCSAgICAgICAgeFBOcTE7DQoJCQkNCgkJCUdxck4gJ25mZmFkTiBacURyJzoNCgkJCQkkV05VQnFkQm0xID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9hV3FEJywgSFB0TiApIC4iJnFXRDtmdEhEdEg9Tld4TlUiOw0KCQkJCQ0KCQlCaiAoICRXTlVCcUhnRE4gPT0gJ25mZmFkTiBacURyJyAmJiAkQnJXcURyQnBOID09ICdmamonICkgew0KCQkJJEd0cmFXMyA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYVdxRF9yQnBOX2FXQlUzJywgSFB0TiApOw0KCQkJJEd0cmFXaCA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYVdxRF9yQnBOX2FXQlVoJywgSFB0TiApOw0KCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxWyIuJEd0cmFXMy4iICIgLiRHdHJhV2guIl0iOw0KCQkJfQ0KCQlOZHJOQmogKCAkV05VQnFIZ0ROID09ICduZmZhZE4gWnFEcicgJiYgJEJyV3FEckJwTiA9PSAnZm0nICkgew0KCQkJJGFOSHFQUGcgPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfYVdxRF9yQnBOJyApOw0KCQkJJFVOamFXMyA9IHJIUEJEcmRxcmhOciggJGFOSHFQUGdbJzNCVUhoJ10gKTsNCgkJCSRVTmphV2ggPSBySFBCRHJkcXJoTnIoICRhTkhxUFBnWydoTkJhaEgnXSApOw0KCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxWyIuJFVOamFXMy4iICIgLiRVTmphV2guIl0iOw0KCQkJfQ0KCQlOZHJOIHsNCgkJCSRIaE5QTmRkID0gIk5xcmdXTlVCcSI7DQoJCQl9CQkJCQkNCgkJCQkNCgkgICAgICAgIHhQTnExOwkJCQ0KCQkJDQoJCQlHcXJOICdBdFVCZic6DQoJCQkkR3RQcXRVQmZyZnRQR04gPSBhTkhfRGZySF9XTkhxKGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfcXRVQmZfcmZ0UEdOJywgSFB0Tik7DQoJCQkkV05VQnFkQm0xSFdEID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9xdFVCZicsIEhQdE4gKTsNCgkJCSRXTlVCcWRCbTEgPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX3F0VUJmJywgSFB0TiApOw0KCQkJCQkJCQ0KCQkJCQ0KCQkJCQlCaiAoICRXcVAxICkgew0KCQkJCSRIaE5QTmRkID0gIk5xcmdXTlVCcVsiIC4kV3FQMS4iXSI7DQoJCQkJfSBOZHJOIHsNCgkJCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxIjsNCgkJCQkJfQ0KCQkJCQkNCgkJCQkJQmogKCAkR3RQcXRVQmZyZnRQR04gPT0gJ3JmdG1VR2RmdFUuR2ZXJyApIHsNCgkJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnFbd3l5IEVseV0iOw0KCQkJCX0gTmRyTiB7DQoNCgkJCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxIjsNCgkJCQkJfQkJCQkJDQoJCQkJCQ0KCQkJCQ0KCSAgICAgICAgeFBOcTE7CQkJDQoJCQkNCgkJCUdxck4gJ3VCbTEnOg0KCQkJCSRXTlVCcV9kQm0xID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9kQm0xJywgSFB0TiApOwkNCgkJCQlCaiAoICRXTlVCcV9kQm0xICE9JycgKSB7DQoJCQkJCUJqICggcnR4ckhQKCAkV05VQnFfZEJtMSwgeSwgZSApID09PSAnaEhIRCcgfHwgcnR4ckhQKCAkV05VQnFfZEJtMSwgeSwgUyApID09PSAnaEhIRHInICkgew0KCQkJCQkJJFdOVUJxX2RCbTFfakJtID0gJFdOVUJxX2RCbTE7IA0KCQkJCQkJfQ0KCQkJCQkJTmRyTiB7DQoJCQkJCQkJJFdOVUJxX2RCbTFfakJtID0gJ2hISEQ6Ly8nIC4kV05VQnFfZEJtMTsgDQoJCQkJCQl9DQoJCQkJCX0NCgkJCQkJTmRyTiB7DQoJCQkJCSRXTlVCcV9kQm0xX2pCbSA9ICREZnJILT5hdEJVOw0KCQkJCQl9DQoJCQkJCQ0KCQkJCSRXTlVCcWRCbTEgPSAkV05VQnFfZEJtMV9qQm07DQoJCQkJJEhoTlBOZGQgPSAiIjsNCgkgICAgICAgIHhQTnExOwkJDQoJCX0NCgkJDQogICAgICBCaiggJEdmdG1ITlAlJG10V19HZmRyID09IHkgKSA6DQoJICANCgkgLy8gJE5XYUhodFd4QldhID0gTldhX0hodFd4X3JQRyggJEJXcWFOLCAkQlczQlVIaCwgJEJXaE5CYWhILCAneScsICd5JyApOyBAMkJtR04gRS5TLnkuYg0KCSANCgkgCSRhZGZ4cWRyQnBOID0gM0RfYU5IX3FISHFHaFdObUhfQldxYU5fclBHKCBOV2FfYU5IX3FISHFHaFdObUhfQlVfalBmV19yUEcoICRCV3FhTiApLCAnanRkZCcgKTsNCgkgCSROV2FIaHRXeEJXYSA9IE5XYV9IaHRXeF9yUEcoICRCV3FhTiwgJEJXM0JVSGgsICRCV2hOQmFoSCwgJGFkZnhxZHJCcE5bRV0sICRhZGZ4cWRyQnBOW0NdLCAkR1dmVU4sICRwR3IgKTsNCgkgDQoJICAJICAJJEd0UEJXYW1XcW1OID0geHFyTm1xV04oJEJXcWFOKTsNCgkJCUJqICggJEd0UEJXYW1XcW1OID09ICdtZi1CV3FhTi1xb3FCZHF4ZE4ua0RhJyApIHsNCgkJCQkkTldhSGh0V3hCV2EgPSAkQldxYU47DQoJCQkJfSBOZHJOIHsNCgkJCQkJJE5XYUhodFd4QldhID0gJE5XYUhodFd4QldhOw0KCQkJCQl9CSAgDQoJCQkJCQ0KCQlCaiAoICRXTlVCcUhnRE4gPT0gJ0xCVU5mJyAmJiBhTkhfRGZySF9XTkhxKGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfb0JVTmZfak5IR2h0UGQnLCBIUHROKSAhPSAnJyApIHsNCgkJCSROV2FIaHRXeEJXYSA9IGFOSF9EZnJIX1dOSHEoYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9vQlVOZl9qTkhHaHRQZCcsIEhQdE4pOw0KCQkJJGpOSEdoQldhcnAgPSAnckhnZE49ImhOQmFoSDonLiRCV2hOQmFoSC4nRGM7IDNCVUhoOicuJEJXM0JVSGguJ0RjOyIgJzsNCgkJfSBOZHJOIHsNCgkJCSRqTkhHaEJXYXJwID0gJyc7DQoJCQl9CQ0KCQkNCgkJQmogKCAkcmhmM3hxVWFOID09ICdFJyAmJiAkV05VQnFIZ0ROID09ICdadGRIQkRkTiBZV3FhTnIgKDJkQlVOUCknICl7DQoJCQkkcVVVeHFVYU4gPSAnPHJEcW0gR2RxcnI9Ik5XYS14cVVhTnIiPjxyRHFtIEdkcXJyPSJCR2Z0bUgiPicuJEJXYUdmdG1ILic8L3JEcW0+PHJEcW0gR2RxcnI9IkJXYUhhIj4nLiRyZlBtLic8L3JEcW0+PC9yRHFtPic7DQoJCX0gTmRyTiB7JHFVVXhxVWFOID0gJyc7fQkJCQkJCQ0KCSAgDQoJICBCaiAoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9oZm9ySGdkTicgKSA9PSAnRScgKSB7ID8+DQogICAgIDxVQm8gckhnZE49IjNCVUhoOjw/RGhEIE5HaGYgJEJXM0JVSGg7ID8+RGM7IGhOQmFoSDo8P0RoRCBOR2hmICRCV2hOQmFoSDsgPz5EYzsiIEdkcXJyPSI8P0RoRCBOR2hmIE5XYV9yZHRhX0hmX21xV04oIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9oZm9ySGdkTicgKSApOyA/PiBvQk4zIFVxLUhodFd4ciBEUE5kZnFVTlBvQk4zIj48P0RoRCBOR2hmICRxVVV4cVVhTjsgPz48VUJvIEdkcXJyPSJCTmhxbVUiPjxCV2EgPD9EaEQgTkdoZiAkRGRHaGRVUDsgPz4gR2RxcnI9Ik5XYWRxcGciIDw/RGhEIE5HaGYgJEJyZHFwZzsgPz49Ijw/RGhEIE5HaGYgJE5XYUhodFd4QldhOyA/PiIgPD9EaEQgTkdoZiAkak5IR2hCV2FycDsgPz4vPjxxIGZtR2RCRzE9Ik5xcmdBR0hCb04ySGdkTjJoTk5IKCc8P0RoRCBOR2hmICRHdHJfckhnZE47ID8+Jyk7UE5IdFBtIEhQdE47IiBHZHFycj0iPD9EaEQgQmogKCAkV05VQnFIZ0ROID09ICdadGRIQkRkTiBZV3FhTnIgKDJkQlVOUCknICYmICR0ck5hcWRkTlBnQm1qZiA9PSAnZm0nICkgeyBOR2hmICRIaE5EZnJIQlUuJy0nLiRqUHJIQldhOyB9IE5kck4geyBOR2hmICRIaE5EZnJIQlU7IH0gPz4iIFBOZD0iPD9EaEQgTkdoZiAkSGhOUE5kZDsgPz4iIGhQTmo9Ijw/RGhEIE5HaGYgJFdOVUJxZEJtMTsgPz4iIDw/RGhEIEJqICggJGRCbTFfSGdETiA9PSAnZm0nICYmICRXTlVCcUhnRE4gPT0gJ3VCbTEnICkgeyBOR2hmICdIcVBhTkg9Il94ZHFtMSInOyB9ID8+Pjw/RGhEIE5HaGYgTldhX2hmb05QX2FObSggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX1VCck5tX2hmb3JIZ2ROJyApLCBOV2FfcmR0YV9IZl9tcVdOKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfaGZvckhnZE4nICkgKSwgJFdOVUJxSEhkLCAkV05VQnFISGQgKTsgPz48L3E+PC9VQm8+PC9VQm8+DQogICAgICAgICAgICANCjw/RGhEIH0gTmRyTkJqICggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX1VCck5tX2hmb3JIZ2ROJyApID09ICcnICkgeyA/Pg0KPFVCbyBHZHFycj0iPD9EaEQgTkdoZiBOV2FfcmR0YV9IZl9tcVdOKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfaGZvckhnZE4nICkgKTsgPz4gb0JOMyBVcS1IaHRXeHIgRFBOZGZxVU5Qb0JOMyIgckhnZE49IjNCVUhoOjw/RGhEIE5HaGYgJEJXM0JVSGg7ID8+RGM7IGhOQmFoSDo8P0RoRCBOR2hmICRCV2hOQmFoSDsgPz5EYzsiPjw/RGhEIE5HaGYgJHFVVXhxVWFOOyA/PjxVQm8gR2RxcnI9IkJOaHFtVSI+PHEgZm1HZEJHMT0iTnFyZ0FHSEJvTjJIZ2ROMmhOTkgoJzw/RGhEIE5HaGYgJEd0cl9ySGdkTjsgPz4nKTtQTkh0UG0gSFB0TjsiIEdkcXJyPSI8P0RoRCBCaiAoICRXTlVCcUhnRE4gPT0gJ1p0ZEhCRGROIFlXcWFOciAoMmRCVU5QKScgJiYgJHRyTmFxZGROUGdCbWpmID09ICdmbScgKSB7IE5HaGYgJEhoTkRmckhCVS4nLScuJGpQckhCV2E7IH0gTmRyTiB7IE5HaGYgJEhoTkRmckhCVTsgfSA/PiIgUE5kPSI8P0RoRCBOR2hmICRIaE5QTmRkOyA/PiIgaFBOaj0iPD9EaEQgTkdoZiAkV05VQnFkQm0xOyA/PiIgPD9EaEQgQmogKCAkZEJtMV9IZ0ROID09ICdmbScgJiYgJFdOVUJxSGdETiA9PSAndUJtMScgKSB7IE5HaGYgJ0hxUGFOSD0iX3hkcW0xIic7IH0gPz4+PEJXYSA8P0RoRCBOR2hmICREZEdoZFVQOyA/PiBHZHFycj0iTldhZHFwZyIgPD9EaEQgTkdoZiAkQnJkcXBnOyA/Pj0iPD9EaEQgTkdoZiAkTldhSGh0V3hCV2E7ID8+IiA8P0RoRCBOR2hmICRqTkhHaEJXYXJwOyA/Pi8+PD9EaEQgTkdoZiBOV2FfaGZvTlBfYU5tKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfVUJyTm1faGZvckhnZE4nICksIE5XYV9yZHRhX0hmX21xV04oIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9oZm9ySGdkTicgKSApLCAkV05VQnFISGQsICRXTlVCcUhIZCApOyA/PjwvcT48L1VCbz48L1VCbz4NCjw/RGhECX0NCg0KCQkvLzdocW1hTmRmYSBvTlByQmZtIEUueS5FLnkgPT4gbk5tTlBxSE4gWVdxYU4gbnFkZE5QZw0KCQlCaiAoICRXTlVCcUhnRE4gPT0gJ1p0ZEhCRGROIFlXcWFOciAoMmRCVU5QKScgKSB7DQoJCQlOR2hmICRhcWRkTjsNCgkJfQ0KDQoJICBObVVCajsNCiAgICAgICRHZnRtSE5QKys7DQogICAgTm1VM2hCZE47DQogICAvLyBQTjNCbVVfRGZySHIoKTsNCiAgICBOR2hmICc8L1VCbz4nOyAvL0dkZnJOciBIaE4gR2ZkdFdtIFVCbw0KICBObVVqZlA7DQogIC8vbU5jSF9EZnJIcl9kQm0xKCcmZHEwdGY7IE1kVU5QIFhtSFBCTnInKTsNCiAgLy9EUE5vQmZ0cl9EZnJIcl9kQm0xKCdzTjNOUCBYbUhQQk5yICZQcTB0ZjsnKTsNCk5kck46DQogIE5HaGYgJzxVQm8gR2RxcnI9IkRqM1BEUCI+PFVCbyBHZHFycj0icWRCYW1ySGdkTiI+PFVCbyBHZHFycj0iSGhOR2ZkIj4nOyA/Pg0KICA8VUJvIEdkcXJyPSJvQk4zIj48QldhIHJQRz0iPD9EaEQgTkdoZiBEZHRhQm1yX3RQZCgnQldxYU5yL3FrcWMtZGZxVU5QLmFCaicgLCBfX2lZdVhfXyk7ID8+IiAzQlVIaD0iYkMiIGhOQmFoSD0iYkMiLz48L1VCbz4NCiAgDQogIDw/RGhEDQpObVVCajsNCjNEX1BOck5IX0RmckhVcUhxKCk7DQpOR2hmICc8VUJvIHJIZ2ROPSJHZE5xUDp4ZkhoOyI+PC9VQm8+JzsNCk5HaGYgJzwvVUJvPjwvVUJvPic7DQoNCi8vIG5ObU5QcUhCbWEgMkdQQkRIIGpmUCBZcmZIZkROL2tRcWFOci9OZE5XTm1IIE5qak5HSA0KTldhX1dxQm1fV05VQnFfckdQQkRIX2FObU5QcUhmUCggJFdOVUJxdG1CMHROQlUsIG10ZGQsIG10ZGQsICcqJywgJEJXM0JVSGgsICRCV2hOQmFoSCwgbXRkZCApOw0KCQkNCiRHZm1ITm1IID0gZnhfYU5IX0dkTnFtKCk7DQpQTkh0UG0gJEdmbUhObUg7DQoNCn0NCk5kck4gew0KZnhfckhxUEgoKTsJDQpOR2hmICc8VUJvIHJIZ2ROPSJVQnJEZHFnOiBtZm1OOyI+PC9VQm8+JzsJDQokR2ZtSE5tSCA9IGZ4X2FOSF9HZE5xbSgpOw0KUE5IdFBtICRHZm1ITm1IOw0KCX0NCg0KfQ0KDQpxVVVfcmhmUEhHZlVOKCAnTnFyZy1XTlVCcScsICdOcXJnX1dOVUJxX3JoZlBIR2ZVTicgKTsNCg0KDQpqdG1HSEJmbSBOcXJnX1dOVUJxX2FtZF9yaGZQSEdmVU4oICRxSEhybSApIHsNCg0KQmogKCBOV2FfYU5IX2RCR19mREhCZm0oICdOV2FEUGZfZEJHTm1yTl9CbWpmJywgJ05XYV9kQkdObXJOX3JIcUh0cicsICdCbW9xZEJVJyAgKQk9PSAnQm1vcWRCVScgKSB7DQoJZnhfckhxUEgoKTsNCglOV2FfalBmbUhfZEJHTm1yTl9tZkhCamcoKTsNCgkkR2ZtSE5tSCA9IGZ4X2FOSF9HZE5xbSgpOw0KCVBOSHRQbSAkR2ZtSE5tSDsNCglQTkh0UG0ganFkck47DQoJfQ0KCQ0KQmogKCBOcXJnV05VQnFfQnJqZmZ4ZmMoKSAhPSAncUdIQm9OJyAmJiAgTldhX3JkdGFfSGZfbXFXTiggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX2RCYWhIeGZjX3JIZ2ROJyApICkgPT0gJ2pmZnhjJyApew0KCWZ4X3JIcVBIKCk7CQkJDQoJTldhX2pQZm1IX2pmZnhmY19tZkhCamcoKTsNCgkkR2ZtSE5tSCA9IGZ4X2FOSF9HZE5xbSgpOw0KCVBOSHRQbSAkR2ZtSE5tSDsNCglQTkh0UG0ganFkck47DQoJfQ0KDQpCaiAoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9EZHRhJyApID09ICdFJyApIHsNCglOY0hQcUdIKCByaGZQSEdmVU5fcUhIciggcVBQcWcoDQoJJ1dOVScgPT4gLUUsDQoJJ3JIZ2ROJyA9PiAnJywNCgknakJkSE5QJyA9PiAnJywNCgknRHFhJyA9PiAnJywJDQoJJ1VOaicgPT4gJycsDQoJJ0dXZlVOJyA9PiAnJywNCgkncEdyJyA9PiAnJywJIAkJDQoJJ3JCcE4nID0+ICcnLA0KCSdmUFVOUCcgPT4gJycJDQoJKSwgJHFISHJtICkgKTsNCgkNCglmeF9ySHFQSCgpOw0KCQ0KCSREcWFOVSA9ICggYU5IXzB0TlBnX29xUCggJ0RxYU5VJyApICkgPyBhTkhfMHROUGdfb3FQKCAnRHFhTlUnICkgOiBFOyAvLyBqZlAgRHFhQm1xSEJmbQ0KCQ0KJFVOampfQldhX2RCV0JIID0gTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX0JXYV9yQnBOX2RCV0JIJyApOyAvLyBhTkggSGhOIFVOanF0ZEggQldxYU4gckJwTiBkQldCSA0KJEhoTmZESCA9IE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9qUFdfckJwTicgKTsgDQooIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9hcWRycmhmMycgKSA9PSAnRScgKSA/ICRCcnJkQlVOcXRIZiA9ICdIUHROJyA6ICRCcnJkQlVOcXRIZiA9ICdqcWRyTic7DQooIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9hcWRtcW8nICkgPT0gJ0UnICkgPyAkQnJyZEJVTnJoZjMgPSAnSFB0TicgOiAkQnJyZEJVTnJoZjMgPSAnanFkck4nOw0KKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfcmRCVU5fQm1IbycgKSAhPSAnJyApID8gJEJycmRCVU5CbUhQb2QgPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfcmRCVU5fQm1IbycgKSpFeXl5IDogJEJycmRCVU5CbUhQb2QgPSAnU3l5eSc7DQokakJkSFBHZHFyciA9ICJOV2EtIi5ySFBIZmRmM05QKCggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX2pCZEhOUHJIZ2ROJyApICkgKTsNCg0KJGpCZEhQRGZyID0gIk5xcmdXTlVCcV8iLnJIUEhmZGYzTlAoKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfakJkSE5QX0RmcicgKSApICk7DQoNCi8vIHVxcGd1ZnFVIFdmVU4gLyAgc2YNCkJqICggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX1VCck5tX2RxcGdkZnFVJyApID09ICdFJyApIHsNCgkkQnJkcXBnID0gJ1VxSHEtZlBCYUJtcWQnOw0KCSREZEdoZFVQID0gJ3JQRz0iJy5EZHRhQm1yX3RQZCggJ0JXcWFOci9IUHFtci5EbWEnICwgX19pWXVYX18gKS4nIic7DQoJfSBOZHJOIHsNCgkJJEJyZHFwZyA9ICdyUEcnOw0KCQkkRGRHaGRVUCA9ICcnOw0KCX0NCg0KLy8gN3RySGZXIDdQZkQgQDJCbUdOIEUuUy55LmINCkJqICggJEdXZlVOICE9ICcnICkgew0KCSRHV2ZVTiA9ICRHV2ZVTjsNCgl9IE5kck4gew0KCQkkR1dmVU4gPSBOV2FfcmR0YV9IZl9tcVdOKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfSGh0V3hHUGZEJyApICk7ICANCgl9DQoJDQovLyA3dHJIZlcgdmZmVywgN1BmRCAmIDJHcWROIEAyQm1HTiBFLlMueS5sDQpCaiAoICRwR3IgIT0gJycgKSB7DQoJJHBHciA9ICRwR3I7DQoJfSBOZHJOIHsNCgkJJHBHciA9IE5XYV9yZHRhX0hmX21xV04oIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9IaHRXeHBHcicgKSApOyAgDQoJfQkJDQoJDQovLyA3dHJIZlcgaUJkSE5QIEByQm1HTiBFLlMuRS5sDQpCaiAoICRVTmogIT0gJycgKSB7DQoJJFVOaiA9ICcuamRIUCcuJFVOajsNCgkkR2RycmRIVXFkZCA9ICcnOw0KCX0gTmRyTiB7DQoJCSRVTmogPSAnKic7DQoJCSRHZHJyZEhVcWRkID0gJ3JOZE5HSE5VJzsNCgkJfQ0KDQovLyA3dHJIZlcgMkhnZE4JCQ0KQmogKCAkckhnZE4gIT0gJycgKSB7DQoJQmogKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfVUJyTm1fckhnZE5fV3FtJyApID09ICdFJyApIHsNCgkkR3RyX3JIZ2ROID0gdEdqQlBySCggJHJIZ2ROICk7DQoJCX0gTmRyTiB7ICRHdHJfckhnZE4gPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfeGZjX3JIZ2ROJyApOyB9DQoJfSBOZHJOIHsNCgkJJEd0cl9ySGdkTiA9IE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV94ZmNfckhnZE4nICk7DQoJfQ0KCQ0KLy8gN3RySGZXIHJCcE4gakJkSE5QCQ0KCUJqICggJHJCcE4gIT0gJycgKSB7DQoJCSRyQnBOb3FkID0gTmNEZGZVTigiLCIsICRyQnBOKTsNCgkJCUJqICggJHJCcE5vcWRbeV0gPiB5ICYmICRyQnBOb3FkW0VdID4geSAmJiBCcl9tdFdOUEJHKCAkckJwTm9xZFt5XSApICYmIEJyX210V05QQkcoICRyQnBOb3FkW0VdICkgKSB7IA0KCQkJCSRCVzNCVUhoID0gJHJCcE5vcWRbeV07DQoJCQkJJEJXaE5CYWhIID0gJHJCcE5vcWRbRV07DQoJCQl9IE5kck4gew0KCQkJCSRCVzNCVUhoID0gckhQQkRyZHFyaE5yKCAkSGhOZkRIWyczQlVIaCddICk7DQoJCQkJJEJXaE5CYWhIID0gckhQQkRyZHFyaE5yKCAkSGhOZkRIWydoTkJhaEgnXSApOw0KCQkJCX0JDQoJCQl9DQoJTmRyTiB7DQoJCSRCVzNCVUhoID0gckhQQkRyZHFyaE5yKCAkSGhOZkRIWyczQlVIaCddICk7DQoJCSRCV2hOQmFoSCA9IHJIUEJEcmRxcmhOciggJEhoTmZESFsnaE5CYWhIJ10gKTsNCgl9ICAgDQoNCkJqICggJFdOVSA+ICd5JyApIHsNCgkkakJtQlUgPSBOY0RkZlVOKCIsIiwgJFdOVSk7DQoJJFdOVUJtcVBQID0gJGpCbUJVOw0KDQoJJE5XcVBhciA9IHFQUHFnKA0KCSdEZnJIX19CbScgPT4gJGpCbUJVLCANCgknRGZySF9IZ0ROJyA9PiAnTnFyZ1dOVUJxYXFkZE5QZycsDQoJJ0RmckhyX0ROUF9EcWFOJyA9PiAtRSwNCgknZlBVTlAnID0+ICdBMjcnLA0KCSdmUFVOUHhnJyA9PiAnV05tdF9mUFVOUCcsDQogIAknRHFhTlUnID0+ICREcWFOVQ0KCSk7DQoJfSAgIA0KDQpCaiAoICRXTlUgPT0gJy1FJyApIHsNCg0KYWRmeHFkICREZnJIOw0KJHFQYXIgPSBxUFBxZygNCgknRGZySF9IZ0ROJyA9PiAnTnFyZ1dOVUJxYXFkZE5QZycsDQoJJ2ZQVU5QJyA9PiAnQTI3JywNCiAgCSdEZnJIX3JIcUh0cicgPT4gJ0R0eGRCcmgnLA0KICAJJ0RmckhyX0ROUF9EcWFOJyA9PiAtRSwNCgknV05IcV8wdE5QZycgPT4gcVBQcWcoDQoJCXFQUHFnKA0KCQkJJzFOZycgPT4gJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfSGdETicsDQoJCQknb3FkdE4nID0+ICdadGRIQkRkTiBZV3FhTnIgKDJkQlVOUCknLA0KCQkJJ0dmV0RxUE4nID0+ICc9Jw0KCQkpLA0KCSkNCiApOw0KIA0KJFdnRGZySHIgPSBhTkhfRGZySHIoICRxUGFyICk7DQpqZlBOcUdoKCAkV2dEZnJIciBxciAkRGZySCApIDoJck5IdERfRGZySFVxSHEoJERmckgpOw0KCQkkcVBQcWdfQlVbXSA9ICREZnJILT5ZRjsNCglObVVqZlBOcUdoOw0KDQpCaiAoJHFQUHFnX0JVKSB7DQokakJtQlUgPSBCV0RkZlVOKCIsIiwgJHFQUHFnX0JVKTsgJGpCbUJVID0gTmNEZGZVTigiLCIsICRqQm1CVSk7ICRXTlVCbXFQUCA9ICRqQm1CVTsNCn0gTmRyTiB7IFBOSHRQbSBqcWRyTjt9DQoNCgkkTldxUGFyID0gcVBQcWcoDQoJJ0RmckhfX0JtJyA9PiAkakJtQlUsDQoJJ0RmckhfSGdETicgPT4gJ05xcmdXTlVCcWFxZGROUGcnLA0KCSdEZnJIcl9ETlBfRHFhTicgPT4gLUUsDQoJJ2ZQVU5QJyA9PiAnQTI3JywNCgknZlBVTlB4ZycgPT4gJ1dObXRfZlBVTlAnLA0KICAJJ0RxYU5VJyA9PiAkRHFhTlUNCgkpOw0KfSANCiANCiROV2FfMHROUGcgPSBtTjMgOFFfenROUGcoICROV3FQYXIgKTsNCg0KQmogKCAkTldhXzB0TlBnLT5ocW9OX0RmckhyKCkgKToNCiRXTlVCcXRtQjB0TkJVID0gTldhVnFtVWZXMkhQQm1hKHcpOyAvL1ZxbVVmVyBHZHFyciBqZlAgakJISk5jSA0KDQoJQmogKCAkakJkSE5QICE9ICcnICYmICREcWEgPT0gJycgKSB7IA0KICAgICAgICBOR2hmJzxyTkdIQmZtIEJVPSJOV2FmREhCZm1yIiBHZHFycj0iJy4kakJkSFBEZnIuJyBOV2FHZE5xUGpCYyBCcmZqQmRHZm1ILScuJFdOVUJxdG1CMHROQlUuJyI+PHRkIEJVPSJqQmRITlByIiBHZHFycj0iRGZQSGpmZEJmLUhxeHIgTldhZkRIQmZtLXJOSCBOV2FHZE5xUGpCYyIgVXFIcS1mREhCZm0tMU5nPSJqQmRITlAiPic7DQogICAgICAgIE5HaGYnPGRCIFVxSHEtZkRIQmZtLW9xZHROPSIqIiBHZHFycj0iJy4kakJkSFBHZHFyci4nICcuJEdkcnJkSFVxZGQuJyIgQlU9Ik5XYXJoZjNxZGQiPicgLk5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9ITmNIX3JoZjNxZGQnICkuICc8L2RCPic7DQoJCQ0KCQlqZlBOcUdoKCAkV05VQm1xUFAgcXIgJE5xR2hXTlUgKSB7DQoJCSRXTlVISGRFID0gYU5IX0RmckhfV05IcSggJE5xR2hXTlUsICdOcXJXTlVCcV9XTkhxeGZjX0hCSGROJywgSFB0TiApOw0KCQkkV05VSEhkQyA9IGFOSF9IaE5fSEJIZE4oICROcUdoV05VICk7DQoJCQ0KCQkJQmogKCAkVU5qID09ICcuamRIUCcuJE5xR2hXTlUpIHsNCgkJCQkkR2RyclVOampCZCA9ICdyTmROR0hOVSc7DQoJCQkJfSBOZHJOIHsgJEdkcnJVTmpqQmQgPSAnJzsgfQkJDQoJCQ0KCQlCaiAoICRXTlVISGRFICE9ICcnICYgJFdOVUhIZEMgPT0gJycgKSB7TkdoZic8ZEIgVXFIcS1mREhCZm0tb3FkdE49Ii5qZEhQJy4kTnFHaFdOVS4nIiBHZHFycj0iJy4kakJkSFBHZHFyci4nICcuJEdkcnJVTmpqQmQuJyI+Jy4kV05VSEhkRS4nPC9kQj4nO30NCgkJQmogKCAkV05VSEhkRSA9PSAnJyAmICRXTlVISGRDICE9ICcnICkge05HaGYnPGRCIFVxSHEtZkRIQmZtLW9xZHROPSIuamRIUCcuJE5xR2hXTlUuJyIgR2RxcnI9IicuJGpCZEhQR2RxcnIuJyAnLiRHZHJyVU5qakJkLiciPicuJFdOVUhIZEMuJzwvZEI+Jzt9DQoJCUJqICggJFdOVUhIZEUgIT0gJycgJiAkV05VSEhkQyAhPSAnJyApIHtOR2hmJzxkQiBVcUhxLWZESEJmbS1vcWR0Tj0iLmpkSFAnLiROcUdoV05VLiciIEdkcXJyPSInLiRqQmRIUEdkcXJyLicgJy4kR2RyclVOampCZC4nIj4nLiRXTlVISGRFLic8L2RCPic7fQkJCQkNCgkJQmogKCAkV05VSEhkRSA9PSAnJyAmICRXTlVISGRDID09ICcnICkge05HaGYnPGRCIFVxSHEtZkRIQmZtLW9xZHROPSIuamRIUHRtSEJIZE5VIiBHZHFycj0iJy4kakJkSFBHZHFyci4nICcuJEdkcnJVTmpqQmQuJyI+S21IQkhkTlU8L2RCPic7fX0NCgkNCiAgICAgIE5HaGYnPC90ZD48L3JOR0hCZm0+JzsNCn0NCg0KQmogKCAkRHFhICE9ICcnICkgeyANCk5HaGYgJzxVQm8gQlU9IkJyZGZxVU5QamZQLScuJFdOVUJxdG1CMHROQlUuJyIgR2RxcnI9Ik5XYXFrY2RmcVVOUCI+PC9VQm8+PFVCbyBySGdkTj0iVUJyRGRxZzogbWZtTjsiIEdkcXJyPSJEcWEzUHFELScuJFdOVUJxdG1CMHROQlUuJyBORGEzUEQiPjxVQm8gQlU9IkRxYS1kTmFObVVDIiBySGdkTj0iVUJyRGRxZzptZm1OOyI+PHh0SEhmbSBySGdkTj0iVUJyRGRxZzogbWZtTjsiIEdkcXJyPSJySHFQSGRxcGdmbURxYS0nLiRXTlVCcXRtQjB0TkJVLiciIEhnRE49Inh0SEhmbSI+ZGZxVSBxZGQgQldxYU5yPC94dEhIZm0+PC9VQm8+PFVCbyBySGdkTj0iVUJyRGRxZzogQm1kQm1OLXhkZkcxOyIgR2RxcnI9Ik5XYURxYW1IbS0nLiRXTlVCcXRtQjB0TkJVLicgTnFyZ1dOVUJxX0dObUhOUCBkQmFoSHhmYycuJFdOVUJxdG1CMHROQlUuJyBOV2FHZE5xUGpCYyI+JzsNCn0gTmRyTiB7DQpOR2hmICc8VUJvIEJVPSJCcmRmcVVOUGpmUC0nLiRXTlVCcXRtQjB0TkJVLiciIEdkcXJyPSJOV2Fxa2NkZnFVTlAiPjwvVUJvPjxVQm8gckhnZE49IlVCckRkcWc6IG1mbU47IiBHZHFycj0iRHFhM1BxRC0nLiRXTlVCcXRtQjB0TkJVLicgTkRhM1BEIiBCVT0ibWZEcWFCbXFIQmZtIj48VUJvIEdkcXJyPSJOcXJnR2ZtSHFCbU5QLScuJFdOVUJxdG1CMHROQlUuJyBOcXJnV05VQnFfR05tSE5QIGRCYWhIeGZjJy4kV05VQnF0bUIwdE5CVS4nIE5XYUdkTnFQakJjIE5XYURxVSI+JzsJDQp9DQoNCjNoQmROICggJE5XYV8wdE5QZy0+aHFvTl9EZnJIcigpICkgOiAkTldhXzB0TlBnLT5IaE5fRGZySCgpOw0KDQoNCkJqICggJERxYSAhPSAnJyApIHsNCgkkSGhOUE5kZCA9ICJOcXJnV05VQnFbIi4kV05VQnF0bUIwdE5CVS4iXSI7DQoJJEhoTkdkcXJyID0gJ0ROcXJnQkhOVyc7DQoJfSBOZHJOIHsNCgkJLy8kSGhOUE5kZCA9ICJOcXJnV05VQnFbIi4kYXFkZE5QZ0JVLiJdIjsNCgkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxW3JoZjNxZGRdIjsNCgkJJEhoTkdkcXJyID0gJ05xcmdCSE5XJzsNCgkJfQ0KCQkNCgkJJGFxZGROUGdCVSA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYXFkZE5QZ19CVScsIEhQdE4gKTsNCgkJJEJXcWFOciA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYXFkZE5QZycsIEhQdE4gKTsNCgkJJEJyUE5yQnBOID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9hcWRkTlBnX2ZESEUnLCBIUHROICk7DQoJCSRXSEhkRSA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfSEJIZE4nLCBIUHROICk7DQoJCSRXSEhkQyA9IGFOSF9IaE5fSEJIZE4oKTsNCg0KCQlCaiAoICRXSEhkRSAhPScnICYmICRXSEhkQyA9PScnICkgeyAkV05VQnFCVSA9IGFOSF9IaE5fQlUoKTt9DQoJCUJqICggJFdISGRFID09JycgJiYgJFdISGRDICE9JycgKSB7ICRXTlVCcUJVID0gYU5IX0hoTl9CVSgpO30gDQoJCUJqICggJFdISGRFICE9JycgJiYgJFdISGRDICE9JycgKSB7ICRXTlVCcUJVID0gYU5IX0hoTl9CVSgpO30gIA0KCQlCaiAoICRXSEhkRSA9PScnICYmICRXSEhkQyA9PScnICkgeyAkV05VQnFCVSA9ICd0bUhCSGROVSc7fQ0KDQoJCQkJQmogKCBCcl9xUFBxZyggJEJXcWFOciApICkgew0KCQkJCQkNCgkJCQkJJEJXR21IID0gR2Z0bUgoICRCV3FhTnIgKTsNCgkJCQkJDQoJCQkJCUJqICggJGZQVU5QID09ICdxckcnICkgew0KCQkJCQkJJEJXYWZQVU5QID0gJEJXcWFOcjsNCgkJCQkJCX0gTmRyTiB7DQoJCQkJCQkJJEJXYWZQVU5QID0gcVBQcWdfUE5vTlByTiggJEJXcWFOciApOw0KCQkJCQkJCX0NCgkJCQkJDQoJCQkJCSRCYSA9IHk7DQoJCQkJCQ0KCQkJCQlqZlBOcUdoKCAkQldhZlBVTlAgcXIgJEJXYV9CVSApIHsNCgkJCQkJCQ0KCQkJCQkJJEJXYSA9IDNEX2FOSF9xSEhxR2hXTm1IX0JXcWFOX3JQRygkQldhX0JVLCAnanRkZCcpOw0KCQkJCQkJJEJXYV90UGQgPSBOcXJnV05VQnFfQldhUE5yQnBOKCAkQldhW3ldLCAkVU5qal9CV2FfZEJXQkgsICRCclBOckJwTiwgJEJXYVtFXSwgJEJXYVtDXSApOw0KICAgICAgICAgICAgICAgICAgICAgICAgJEJXYV90UGQgPSBOY0RkZlVOKCIsIiwgJEJXYV90UGQpOw0KCQkJCQkJJEJXYV9CbWpmID0gYU5IX0RmckgoICRCV2FfQlUgKTsNCgkJCQkJCS8vJEhodFd4SEhkID0gJEJXYV9CbWpmLT5EZnJIX0hCSGROOw0KCQkJCQkJLy8kSGh0V3hISGQgPSBOckdfaEhXZCggTnJHX2tyKCAkSGh0V3hISGQgKSApOw0KCQkJCQkJJE5jSCA9IERxSGhCbWpmKCRCV2FbeV0sIFFBSlRZc2lNX1hSSlhzMllNcyk7DQoJCQkJCQkkakJkTm1XID0geHFyTm1xV04oJEJXYVt5XSwgIi4iLiROY0gpOwkJDQoJCQkJCQkNCgkJCQkJCSR0ck5hcWRkTlBnQm1qZiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYXFkZE5QZ19mREhDJywgSFB0TiApOwkJDQoJCQkJCQlCaiAoICR0ck5hcWRkTlBnQm1qZiA9PSAnZm0nICkgew0KCQkJCQkJJEhodFd4SEhkID0gJEJXYV9CbWpmLT5EZnJIX0hCSGROOw0KCQkJCQkJJEhodFd4SEhkID0gckhQQkRyZHFyaE5yICggTnJHX2hIV2QoIE5yR19rciggJEhodFd4SEhkICkgKSApOw0KCQkJCQkJfSBOZHJOIHsNCgkJCQkJCSRIaHRXeEhIZCA9IHJIUEJEcmRxcmhOciggYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19IQkhkTicsIEhQdE4gKSApOw0KCQkJCQkJfQkJCQkJCQ0KCQkJCQkJDQoJCQkJCQkvLyROV2FIaHRXeEJXYSA9IE5XYV9IaHRXeF9yUEcoICRCV2FbeV0sICRCVzNCVUhoLCAkQldoTkJhaEgsICRCV2FbRV0sICRCV2FbQ10gKTsgIEAyQm1HTiBFLlMueS5iDQoJCQkJCQkJCQkJCQkNCgkJCQkJCSROV2FIaHRXeEJXYSA9IE5XYV9IaHRXeF9yUEcoICRCV2FbeV0sICRCVzNCVUhoLCAkQldoTkJhaEgsICRCV2FbRV0sICRCV2FbQ10sICRHV2ZVTiwgJHBHciApOw0KCQkJCQkJDQoJCQkJCQkNCgkJCQkJCSRIaHRXeEhIZCA9IHJIUEJEcmRxcmhOcigkSGh0V3hISGQpOw0KCQkJCQkJDQoJCQkJCQlOV2FfZEJhaEh4ZmNfQldxYU5fYVBCVV9hTm1OUHFIZlAoIE5XYV9yZHRhX0hmX21xV04oIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9kQmFoSHhmY19ySGdkTicgKSApLCAkQlczQlVIaCwgJEJXaE5CYWhILCAkSGhOR2RxcnIsICRXTlVCcUJVLCAkTldhSGh0V3hCV2EsICRqQmRObVcsICRHdHJfckhnZE4sIGFOSF9IaE5fQlUoKSwgJEJXYV9CVSwgJEhoTlBOZGQsICRCV2FfdFBkW3ldLCAkSGh0V3hISGQsIE5XYVZxbVVmVzJIUEJtYSh3KSwgTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX1VCck5tX2hmb3JIZ2ROJyApLCBOV2FfcmR0YV9IZl9tcVdOKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfaGZvckhnZE4nICkgKSwgJEJyZHFwZywgJERkR2hkVVAgKTsJCQkJCQkNCgkJCQkJCQkJCQkJCQ0KCQkJCX0gIH0NCgkJCQlOZHJOIHsNCgkJCQlOR2hmICc8VUJvIHJIZ2ROPSJVQnJEZHFnOm1mbU4iPjwvVUJvPic7DQoJCQkJfQ0KDQo/Pg0KDQo8P0RoRA0KTm1VM2hCZE47DQokYUJISEhkID0gJGFCSEhIZCArICRCV0dtSDsNCg0KTmRyTjoNCk5HaGYgJzxVQm8gR2RxcnI9Ik5xcmdXTlVCcV9HTm1ITlAiPic7IA0KTkdoZiAnPFVCbyBHZHFycj0ib0JOMyI+PEJXYSByUEc9IicuRGR0YUJtcl90UGQoJ0JXcWFOci9xa3FjLWRmcVVOUC5hQmonICwgX19pWXVYX18pLiciIDNCVUhoPSJiQyIgaE5CYWhIPSJiQyIvPjwvVUJvPic7CQ0KJEdmbUhtSCA9IGZ4X2FOSF9HZE5xbSgpOw0KUE5IdFBtICRHZm1IbUg7ICANCg0KTm1VQmo7DQozRF9QTnJOSF9EZnJIVXFIcSgpOw0KTkdoZiAnPFVCbyBySGdkTj0iR2ROcVA6eGZIaDsiPjwvVUJvPic7DQoNCkJqICggJERxYSAhPSAnJyApIHsgDQpOR2hmICc8L1VCbz48VUJvIEJVPSJrRHFhTnInLiRXTlVCcXRtQjB0TkJVLiciIEdkcXJyPSJOV2EtRHFhLWhmZFVOUCBOV2FEJy5ySFBIZmRmM05QKE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9EcWFfckhnZE4nICkpLiciPjwvVUJvPjwvVUJvPic7DQoNCn0gTmRyTiB7DQpOR2hmICc8L1VCbz48L1VCbz4nOw0KDQp9DQoNCi8vIG5ObU5QcUhCbWEgMkdQQkRIIGpmUCBZcmZIZkROL2tRcWFOci9OZE5XTm1IIE5qak5HSA0KTldhX1dxQm1fV05VQnFfckdQQkRIX2FObU5QcUhmUCggJFdOVUJxdG1CMHROQlUsICREcWEsIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9EcWFfTmpqTkdIJyApLCAkVU5qLCAkQlczQlVIaCwgJEJXaE5CYWhILCAkYUJISEhkICk7DQoNCi8vIG5ObU5QcUhCbWEgMkdQQkRIIGpmUCBOcUdoIHVCYWhIeGZjDQpOV2FfZEJhaEh4ZmNfckdQQkRIX2FObU5QcUhmUCggTldhX3JkdGFfSGZfbXFXTiggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX2RCYWhIeGZjX3JIZ2ROJyApICksICRCcnJkQlVOcXRIZiwgJEJycmRCVU5CbUhQb2QsICRCcnJkQlVOcmhmMywgJFdOVUJxdG1CMHROQlUsICRXTlVCcXRtQjB0TkJVICk7DQoNCiRHZm1ITm1IID0gZnhfYU5IX0dkTnFtKCk7DQpQTkh0UG0gJEdmbUhObUg7DQoJDQp9DQpOZHJOIHsNCmZ4X3JIcVBIKCk7CQ0KTkdoZiAnPFVCbyBySGdkTj0iVUJyRGRxZzogbWZtTjsiPjwvVUJvPic7CQ0KJEdmbUhtSCA9IGZ4X2FOSF9HZE5xbSgpOw0KUE5IdFBtICRHZm1IbUg7DQoJfQ0KDQp9DQoNCnFVVV9yaGZQSEdmVU4oICdOcXJnV05VQnEtYXFkZE5QZycsICdOcXJnX1dOVUJxX2FtZF9yaGZQSEdmVU4nICk7DQoNCg0KanRtR0hCZm0gTnFyZ19XTlVCcV9HcUhOYWZQZyggJHFISHJtICkgew0KCQ0KQmogKCBOV2FfYU5IX2RCR19mREhCZm0oICdOV2FEUGZfZEJHTm1yTl9CbWpmJywgJ05XYV9kQkdObXJOX3JIcUh0cicsICdCbW9xZEJVJyAgKQk9PSAnQm1vcWRCVScgKSB7DQoJZnhfckhxUEgoKTsNCglOV2FfalBmbUhfZEJHTm1yTl9tZkhCamcoKTsNCgkkR2ZtSE5tSCA9IGZ4X2FOSF9HZE5xbSgpOw0KCVBOSHRQbSAkR2ZtSE5tSDsNCglQTkh0UG0ganFkck47DQp9CQ0KDQpCaiAoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9EZHRhJyApID09ICdFJyApIHsNCgkNCglOY0hQcUdIKCByaGZQSEdmVU5fcUhIciggcVBQcWcoDQoJJ0dxSCcgPT4gLUUsDQoJJ3JIZ2ROJyA9PiAnJywNCgknakJkSE5QJyA9PiAnJywJDQoJJ1dxUDEnID0+ICcnLA0KCSdEcWEnID0+ICcnLA0KCSdHV2ZVTicgPT4gJycsDQoJJ3BHcicgPT4gJycsCQ0KCSdVTmonID0+ICcnLAkJDQoJJ3JCcE4nID0+ICcnDQoJKSwgJHFISHJtICkgKTsNCgkNCglmeF9ySHFQSCgpOw0KCQ0KCSREcWFOVSA9ICggYU5IXzB0TlBnX29xUCggJ0RxYU5VJyApICkgPyBhTkhfMHROUGdfb3FQKCAnRHFhTlUnICkgOiBFOyAvLyBqZlAgRHFhQm1xSEJmbQ0KCQ0KJFVOampfQldhX2RCV0JIID0gTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX0JXYV9yQnBOX2RCV0JIJyApOyAvLyBhTkggSGhOIFVOanF0ZEggQldxYU4gckJwTiBkQldCSA0KJEhoTmZESCA9IE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9qUFdfckJwTicgKTsgCSANCiRyaGYzeHFVYU4gPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfVUJyTm1fcmhmM0dtSFBIaHRXeCcgKTsgIA0KJGpCZEhQR2RxcnIgPSAiTldhLSIuckhQSGZkZjNOUCgoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9qQmRITlBySGdkTicgKSApICk7DQokakJkSFBEZnIgPSAiTnFyZ1dOVUJxXyIuckhQSGZkZjNOUCgoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9qQmRITlBfRGZyJyApICkgKTsNCg0KLy8gdXFwZ3VmcVUgV2ZVTiAvICBzZg0KQmogKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfVUJyTm1fZHFwZ2RmcVUnICkgPT0gJ0UnICkgew0KCSRCcmRxcGcgPSAnVXFIcS1mUEJhQm1xZCc7DQoJJERkR2hkVVAgPSAnclBHPSInLkRkdGFCbXJfdFBkKCAnQldxYU5yL0hQcW1yLkRtYScgLCBfX2lZdVhfXyApLiciJzsNCgl9IE5kck4gew0KCQkkQnJkcXBnID0gJ3JQRyc7DQoJCSREZEdoZFVQID0gJyc7DQoJfQ0KDQovLyA3dHJIZlcgN1BmRCBAMkJtR04gRS5TLnkuYg0KQmogKCAkR1dmVU4gIT0gJycgKSB7DQoJJEdXZlVOID0gJEdXZlVOOw0KCX0gTmRyTiB7DQoJCSRHV2ZVTiA9IE5XYV9yZHRhX0hmX21xV04oIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9IaHRXeEdQZkQnICkgKTsgDQoJfQ0KCQ0KLy8gN3RySGZXIHZmZlcsIDdQZkQgJiAyR3FkTiBAMkJtR04gRS5TLnkubA0KQmogKCAkcEdyICE9ICcnICkgew0KCSRwR3IgPSAkcEdyOw0KCX0gTmRyTiB7DQoJCSRwR3IgPSBOV2FfcmR0YV9IZl9tcVdOKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfSGh0V3hwR3InICkgKTsgIA0KCX0JCQ0KCQ0KLy8gN3RySGZXIGlCZEhOUCBAckJtR04gRS5TLkUubA0KQmogKCAkVU5qICE9ICcnICkgew0KCSRVTmogPSAnLmpkSFAnLiRVTmo7DQoJJEdkcnJkSFVxZGQgPSAnJzsNCgl9IE5kck4gew0KCQkkVU5qID0gJyonOw0KCQkkR2RycmRIVXFkZCA9ICdyTmROR0hOVSc7DQoJCX0NCgkJDQovLyA3dHJIZlcgMkhnZE4JCQ0KQmogKCAkckhnZE4gIT0gJycgKSB7DQoJQmogKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfVUJyTm1fckhnZE5fV3FtJyApID09ICdFJyApIHsNCgkkR3RyX3JIZ2ROID0gdEdqQlBySCggJHJIZ2ROICk7DQoJCX0gTmRyTiB7ICRHdHJfckhnZE4gPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfeGZjX3JIZ2ROJyApOyB9DQoJfSBOZHJOIHsNCgkJJEd0cl9ySGdkTiA9IE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV94ZmNfckhnZE4nICk7DQoJfQ0KCQ0KLy8gN3RySGZXIHJCcE4gakJkSE5QCQ0KCUJqICggJHJCcE4gIT0gJycgKSB7DQoJCSRyQnBOb3FkID0gTmNEZGZVTigiLCIsICRyQnBOKTsNCgkJCUJqICggJHJCcE5vcWRbeV0gPiB5ICYmICRyQnBOb3FkW0VdID4geSAmJiBCcl9tdFdOUEJHKCAkckJwTm9xZFt5XSApICYmIEJyX210V05QQkcoICRyQnBOb3FkW0VdICkgKSB7IA0KCQkJCSRCVzNCVUhoID0gJHJCcE5vcWRbeV07DQoJCQkJJEJXaE5CYWhIID0gJHJCcE5vcWRbRV07DQoJCQl9IE5kck4gew0KCQkJCSRCVzNCVUhoID0gckhQQkRyZHFyaE5yKCAkSGhOZkRIWyczQlVIaCddICk7DQoJCQkJJEJXaE5CYWhIID0gckhQQkRyZHFyaE5yKCAkSGhOZkRIWydoTkJhaEgnXSApOw0KCQkJCX0JDQoJCQl9DQoJTmRyTiB7DQoJCSRCVzNCVUhoID0gckhQQkRyZHFyaE5yKCAkSGhOZkRIWyczQlVIaCddICk7DQoJCSRCV2hOQmFoSCA9IHJIUEJEcmRxcmhOciggJEhoTmZESFsnaE5CYWhIJ10gKTsNCgl9ICAgDQoNCkJqICggJEdxSCA+ICd5JyApIHsNCgkNCgkkakJtQlUgPSBOY0RkZlVOKCIsIiwgJEdxSCk7DQoJJFdOVUJtcVBQID0gJGpCbUJVOwkNCgkNCiROV2FxUGFyID0gcVBQcWcoIA0KICAgICdEZnJIX0hnRE4nID0+ICdOcXJnV05VQnFhcWRkTlBnJywNCiAgICAncmhmM0RmckhyJyA9PiAtRSwNCgknRGZySHJfRE5QX0RxYU4nID0+IC1FLA0KCSdmUFVOUHhnJyA9PiAnV05tdF9mUFVOUCcsDQogICAgJ2ZQVU5QJyA9PiAnQTI3JywNCiAgICAnSHFjXzB0TlBnJyA9PiBxUFBxZygNCiAgICAgICAgcVBQcWcoDQogICAgICAgICAgICAnSHFjZm1mV2cnID0+ICdOV05VQnFhcWRkTlBnJywNCiAgICAgICAgICAgICdITlBXcicgPT4gJGpCbUJVLA0KICAgICAgICAgICAgJ2pCTmRVJyA9PiAnSE5QV19CVScsDQogICAgICAgICkNCiAgICApLA0KKTsJDQp9DQogDQoNCiANCiROV2FfMHROUGcgPSBtTjMgOFFfenROUGcoICROV2FxUGFyICk7DQpCaiAoICROV2FfMHROUGctPmhxb05fRGZySHIoKSApOg0KJFdOVUJxdG1CMHROQlUgPSBOV2FWcW1VZlcySFBCbWEodyk7IC8vVnFtVWZXIEdkcXJyIGpmUCBqQkhKTmNIDQoNCglCaiAoICRqQmRITlAgIT0gJycgJiYgJERxYSA9PSAnJyApIHsgDQogICAgICAgIE5HaGYnPHJOR0hCZm0gQlU9Ik5XYWZESEJmbXIiIEdkcXJyPSInLiRqQmRIUERmci4nIE5XYUdkTnFQakJjIEJyZmpCZEdmbUgtJy4kV05VQnF0bUIwdE5CVS4nIj48dGQgQlU9ImpCZEhOUHIiIEdkcXJyPSJEZlBIamZkQmYtSHF4ciBOV2FmREhCZm0tck5IIE5XYUdkTnFQakJjIiBVcUhxLWZESEJmbS0xTmc9ImpCZEhOUCI+JzsNCiAgICAgICAgTkdoZic8ZEIgVXFIcS1mREhCZm0tb3FkdE49IioiIEdkcXJyPSInLiRqQmRIUEdkcXJyLicgJy4kR2RycmRIVXFkZC4nIiBCVT0iTldhcmhmM3FkZCI+JyAuTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX0hOY0hfcmhmM3FkZCcgKS4gJzwvZEI+JzsNCgkJDQoJCWpmUE5xR2goICRXTlVCbXFQUCBxciAkTnFHaEdxSCApIHsNCgkJJEhOUFdyID0gYU5IX0hOUFcoICROcUdoR3FILCAnTldOVUJxYXFkZE5QZycgKTsNCgkJJGpCZEhCVSA9ICRITlBXci0+bXFXTjsgDQoJCQ0KCQkJQmogKCAkVU5qID09ICcuamRIUCcuJE5xR2hHcUgpIHsNCgkJCQkkR2RyclVOampCZCA9ICdyTmROR0hOVSc7DQoJCQkJfSBOZHJOIHsgJEdkcnJVTmpqQmQgPSAnJzsgfQkJDQoJCQ0KCQlCaiAoICRqQmRIQlUgKSB7DQoJCU5HaGYnPGRCIEdkcXJyPSInLiRqQmRIUEdkcXJyLicgJy4kR2RyclVOampCZC4nIiBVcUhxLWZESEJmbS1vcWR0Tj0iLmpkSFAnLiROcUdoR3FILiciPicuJGpCZEhCVS4nPC9kQj4nOwkNCgkJfSBOZHJOIHtOR2hmJzxkQiBHZHFycj0iJy4kakJkSFBHZHFyci4nIiBVcUhxLWZESEJmbS1vcWR0Tj0iLmpkSFB0bUdxSE5hZlBCcE5VIj5LbUdxSE5hZlBCcE5VPC9kQj4nO30NCg0KCQl9DQoJDQogICAgICBOR2hmJzwvdGQ+PC9yTkdIQmZtPic7DQp9DQoNCkJqICggJERxYSAhPSAnJyApIHsgDQpOR2hmICc8VUJvIEJVPSJCcmRmcVVOUGpmUC0nLiRXTlVCcXRtQjB0TkJVLiciIEdkcXJyPSJOV2Fxa2NkZnFVTlAiPjwvVUJvPjxVQm8gckhnZE49IlVCckRkcWc6IG1mbU47IiBHZHFycj0iRHFhM1BxRC0nLiRXTlVCcXRtQjB0TkJVLicgTkRhM1BEIj48VUJvIEJVPSJEcWEtZE5hTm1VQyIgckhnZE49IlVCckRkcWc6bWZtTjsiPjx4dEhIZm0gckhnZE49IlVCckRkcWc6IG1mbU47IiBHZHFycj0ickhxUEhkcXBnZm1EcWEtJy4kV05VQnF0bUIwdE5CVS4nIiBIZ0ROPSJ4dEhIZm0iPmRmcVUgcWRkIEJXcWFOcjwveHRISGZtPjwvVUJvPjxVQm8gckhnZE49IlVCckRkcWc6IEJtZEJtTi14ZGZHMTsiIEdkcXJyPSJOV2FEcWFtSG0tJy4kV05VQnF0bUIwdE5CVS4nIE5xcmdXTlVCcV9HTm1ITlAgTldhR2ROcVBqQmMiPic7DQp9IE5kck4gew0KTkdoZiAnPFVCbyBCVT0iQnJkZnFVTlBqZlAtJy4kV05VQnF0bUIwdE5CVS4nIiBHZHFycj0iTldhcWtjZGZxVU5QIj48L1VCbz48VUJvIHJIZ2ROPSJVQnJEZHFnOiBtZm1OOyIgR2RxcnI9IkRxYTNQcUQtJy4kV05VQnF0bUIwdE5CVS4nIE5EYTNQRCIgQlU9Im1mRHFhQm1xSEJmbSI+PFVCbyBHZHFycj0iTnFyZ0dmbUhxQm1OUC0nLiRXTlVCcXRtQjB0TkJVLicgTnFyZ1dOVUJxX0dObUhOUCBOV2FHZE5xUGpCYyBOV2FEcVUiPic7CQ0KfQ0KDQoJM2hCZE4gKCAkTldhXzB0TlBnLT5ocW9OX0RmckhyKCkgKSA6ICROV2FfMHROUGctPkhoTl9EZnJIKCk7DQoNCgkJLy8kQldxYU4gPSAzRF9hTkhfcUhIcUdoV05tSF90UGQoIGFOSF9EZnJIX0hodFd4bXFCZF9CVSggYU5IX0hoTl9CVSgpICkgKTsNCgkJLy8kQldxYU4gPSBhTkhfSGhOX0RmckhfSGh0V3htcUJkKCBhTkhfSGhOX0JVKCksICczZlAxLXFVV0JtLUhodFd4JyApIDsNCgkJJEJXcWFOID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19CV2EnLCBIUHROICk7DQoJCSRXTlVCcUhIZCA9IE5yR19oSFdkKCBOckdfa3IoIGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfSEJIZE4nLCBIUHROICkgKSApOyAkV05VQnFISGQgPSBySFBCRHJkcXJoTnIoJFdOVUJxSEhkKTsNCgkJJFdOVUJxSGdETiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfSGdETicsIEhQdE4gKTsNCgkJJEJyb0JVckJwTiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfb0JVTmZfckJwTicsIEhQdE4gKTsNCgkJJEJyV3FEckJwTiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYVdxRF9yQnBOJywgSFB0TiApOw0KCQkkYXFkZE5QZ0JVID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9hcWRkTlBnX0JVJywgSFB0TiApOwkNCgkJJEJyUE5yQnBOID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9hcWRkTlBnX2ZESEUnLCBIUHROICk7DQoJCSRCclBOckJwTkUgPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX0JXcWFOX2ZESEUnLCBIUHROICk7DQoJCSR0ck5hcWRkTlBnQm1qZiA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYXFkZE5QZ19mREhDJywgSFB0TiApOw0KCQkkZEJtMV9IZ0ROID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9kQm0xX2ZESEUnLCBIUHROICk7DQoJCSRIaE5EZnJIQlUgPSBhTkhfSGhOX0JVKCk7DQoJCSRXTlVHcUggPSAzRF9hTkhfRGZySF9ITlBXciggYU5IX0hoTl9CVSgpLCAnTldOVUJxYXFkZE5QZycgKTsNCgkJDQoJCQ0KLyogIExOUHJCZm0gRS5iLkUuYiAtIEUuYi5FLlMNCgkJQmogKCRXTlVHcUgpIHsNCgkJamZQTnFHaCAoICRXTlVHcUggcXIgJEdxSCApIHsNCgkJCSRXTlVCcUJVPSAkR3FILT5ITlBXX0JVOw0KCQkJdG1yTkgoJFdOVUdxSCk7DQoJCX0gfSBOZHJOIHskV05VQnFCVSA9ICd0bUdxSE5hZlBCcE5VJzsgdG1yTkgoJFdOVUdxSCk7fQkJCQ0KKi8JDQoJCQ0KLypAckJtR04gRS5iLkUubAkJKi8JDQoJCSRITlBXciA9IGFOSF9IaE5fSE5QV3IoIGFOSF9IaE5fQlUoKSwgJ05XTlVCcWFxZGROUGcnICk7DQoJCUJqICggJEhOUFdyICYmICEgQnJfM0RfTlBQZlAoICRITlBXciApICkgOg0KCQkkV0dxSEJVID0gcVBQcWcoKTsNCgkJamZQTnFHaCAoICRITlBXciBxciAkSE5QVyApIHsNCgkJCSRXR3FIQlVbXSA9ICRITlBXLT5ITlBXX0JVOw0KCQkJfQ0KCQkJJFdOVUJxQlUgPSAiamRIUCIuIGtmQm0oICIgamRIUCIsICRXR3FIQlUgKTsNCgkJCU5tVUJqOw0KCQkJCQkNCgkJCUJqICggJEJXcWFOID09ICcnICkgew0KCQkJCSRCV3FhTiA9IERkdGFCbXJfdFBkKCAnQldxYU5yL21mLUJXcWFOLXFvcUJkcXhkTi5rRGEnICwgX19pWXVYX18gKSA7DQoJCQkJfQ0KCQkJCU5kck4gew0KCQkJCQkkQldxYU4gPSAkQldxYU47DQoJCQkJCX0NCg0KCQlyM0JIR2ggKCAkV05VQnFIZ0ROICkgew0KCQkJR3FyTiAnMkJtYWROIFlXcWFOJzoNCgkJCQkNCgkJCQlCaiAoIHhxck5tcVdOKCAkQldxYU4gKSA9PSAnbWYtQldxYU4tcW9xQmRxeGROLmtEYScgKSB7DQoJCQkJCSRXTlVCcWRCbTEgPSAkQldxYU47DQoJCQkJfQ0KCQkJCQlOZHJOIHsNCgkJCQkkcUhIQlUgPSAzRF9hTkhfcUhIcUdoV05tSF9CV3FhTl9yUEcoIE5XYV9hTkhfcUhIcUdoV05tSF9CVV9qUGZXX3JQRyggJEJXcWFOICksICdqdGRkJyApOw0KCQkJCSRXTlVCcWRCbTEgPSBOcXJnV05VQnFfQldhUE5yQnBOKCAkcUhIQlVbeV0sICRVTmpqX0JXYV9kQldCSCwgJEJyUE5yQnBORSwgJHFISEJVW0VdLCAkcUhIQlVbQ10gKTsNCgkJCQkkV05VQnFkQm0xID0gTmNEZGZVTigiLCIsICRXTlVCcWRCbTEpOyAkV05VQnFkQm0xID0gJFdOVUJxZEJtMVt5XTsNCgkJCQkJfQ0KCQkJCQlCaiAoICRXcVAxICkgew0KCQkJCSRIaE5QTmRkID0gIk5xcmdXTlVCcVsiIC4kV3FQMS4iXSI7DQoJCQkJfSBOZHJOIHsNCgkJCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxIjsNCgkJCQkJfQ0KCQkJCQ0KCQkJCQ0KCSAgICAJeFBOcTE7DQoJCQkNCgkJCUdxck4gJ1p0ZEhCRGROIFlXcWFOciAoMmRCVU5QKSc6DQoJCQkJCQkJDQoJCQkJQmogKCAkRHFhICE9ICcnICkgew0KCQkJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnFbIi4kV05VQnF0bUIwdE5CVS4iXSI7DQoJCQkJCX0gTmRyTiB7DQoJCQkJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnFbIi4kYXFkZE5QZ0JVLiJdIjsNCgkJCQkJCX0NCgkJDQoJCQkJJEJXcWFOciA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYXFkZE5QZycsIEhQdE4gKTsNCgkJCQkNCgkJCWZ4X3JIcVBIKCk7DQoJCQkJQmogKCBCcl9xUFBxZyggJEJXcWFOciApICkgew0KCQkJCQkkQmEgPSB5Ow0KDQoJCQkJCU5HaGYgJzxVQm8gQlU9Ik5xcmdXTlVCcV9hcWRkTlBnR2ZtSHFCbU5QLScuJFdOVUJxdG1CMHROQlUuJyIgckhnZE49IlVCckRkcWc6bWZtTiI+JzsNCgkJCQkJamZQTnFHaCggJEJXcWFOciBxciAkQldhX0JVICkgew0KCQkJCQkJDQoJCQkJCQkJLy83aHFtYU5kZmEgb05QckJmbSBFLmIuRS5iID0+IDJOSCBFckggWVdxYU4gbnFkZE5QZw0KCQkJCQkJCUJqKCRCYSsrID09IHkpIHsNCgkJCQkJCQkJJEJXYSA9IDNEX2FOSF9xSEhxR2hXTm1IX0JXcWFOX3JQRygkQldhX0JVLCAnanRkZCcpOw0KCQkJCQkJCQkkalBySEJXYSA9ICRCV2FfQlU7DQoJCQkJCQkJCSRXTlVCcWRCbTEgPSBOcXJnV05VQnFfQldhUE5yQnBOKCAkQldhW3ldLCAkVU5qal9CV2FfZEJXQkgsICRCclBOckJwTiwgJEJXYVtFXSwgJEJXYVtDXSApOw0KCQkJCQkJCQkkV05VQnFkQm0xID0gTmNEZGZVTigiLCIsICRXTlVCcWRCbTEpOyAkV05VQnFkQm0xID0gJFdOVUJxZEJtMVt5XTsNCgkJCQkJCQkJfQ0KCQkJCQkJCQkJCQkJCQkJCQ0KCQkJCQkJJEJXYSA9IDNEX2FOSF9xSEhxR2hXTm1IX0JXcWFOX3JQRygkQldhX0JVLCAnanRkZCcpOw0KCQkJCQkJJEJXYV90UGQgPSBOcXJnV05VQnFfQldhUE5yQnBOKCAkQldhW3ldLCAkVU5qal9CV2FfZEJXQkgsICRCclBOckJwTiwgJEJXYVtFXSwgJEJXYVtDXSApOw0KICAgICAgICAgICAgICAgICAgICAgICAgJEJXYV90UGQgPSBOY0RkZlVOKCIsIiwgJEJXYV90UGQpOyA/Pg0KICAgICAgICAgICAgICAgIAk8cSBHZHFycj0iPD9EaEQgTkdoZiAkSGhORGZySEJVOyA/Pi08P0RoRCBOR2hmICRCV2FfQlU7ID8+IiBoUE5qPSI8P0RoRCBOR2hmICRCV2FfdFBkW3ldOyA/PiIgUE5kPSI8P0RoRCBOR2hmICRIaE5QTmRkOyA/PiI+PC9xPg0KICAgICAgICAgICAgCQk8P0RoRA0KCQkJCQkkQldhR2Z0bUggPSAkQmE7DQoJCQkJfSBOR2hmICc8L1VCbz4nOyB9DQoJCQkJTmRyTiB7DQoJCQkJTkdoZiAnPFVCbyBySGdkTj0iVUJyRGRxZzptZm1OIj48L1VCbz4nOw0KCQkJCX0NCgkJJGFxZGROID0gZnhfYU5IX0dkTnFtKCk7DQoJCUJqICgkQldhR2Z0bUggPD0gRSkgeyRyZlBtID0gIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9HZnRtSHJCbWEnICk7fSBOZHJOIHskcmZQbSA9IE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9HZnRtSERkdFBxZCcgKTt9DQoNCgkJCXhQTnExOwkJCQ0KCQkJDQoJCQlHcXJOICdMQlVOZic6DQoJCQkJJG9CVUdmb05QID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19CV2EnLCBIUHROICk7DQoJCQkJJG9CVWRCbTFFID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9vQlVOZicsIEhQdE4gKTsNCgkJCQkkb0JVZEJtMUMgPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX29CVU5mXzNOeFcnLCBIUHROICk7DQoJCQkJJG9CVWRCbTFiID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9vQlVOZl9mYWEnLCBIUHROICk7DQoNCgkJCQlCaiAoICRvQlVkQm0xRSAhPSAnJyApIHsgJG9CVWRCbTFFID0gJG9CVWRCbTFFO30gTmRyTiB7JG9CVWRCbTFFID0gJy0nO30NCgkJCQlCaiAoICRvQlVkQm0xQyAhPSAnJyApIHsgJG9CVWRCbTFDID0gJG9CVWRCbTFDO30gTmRyTiB7JG9CVWRCbTFDID0gJy0nO30NCgkJCQlCaiAoICRvQlVkQm0xYiAhPSAnJyApIHsgJG9CVWRCbTFiID0gJG9CVWRCbTFiO30gTmRyTiB7JG9CVWRCbTFiID0gJy0nO30NCgkJCQlCaiAoICRvQlVHZm9OUCAhPSAnJyApIHsgJG9CVUdmb05QID0gJG9CVUdmb05QO30gTmRyTiB7JG9CVUdmb05QID0gJy0nO30NCgkJCQkNCgkJCQkNCgkNCgkJCQlCaiAoIERxSGhCbWpmKCRvQlVkQm0xRSwgUUFKVFlzaU1fWFJKWHMyWU1zKSA9PSAnV0RlJyB8fCBEcUhoQm1qZigkb0JVZEJtMUMsIFFBSlRZc2lNX1hSSlhzMllNcykgPT0gJzNOeFcnIHx8IERxSGhCbWpmKCRvQlVkQm0xYiwgUUFKVFlzaU1fWFJKWHMyWU1zKSA9PSAnZmFvJyB8fCBEcUhoQm1qZigkb0JVZEJtMUUsIFFBSlRZc2lNX1hSSlhzMllNcykgPT0gJzNXbycpIHsNCgkJCQkJJFdOVUJxZEJtMSA9ICRvQlVkQm0xRS4nI05XYSMnLiRvQlVkQm0xQy4nI05XYSMnLiRvQlVkQm0xYi4nI05XYSMnLk5XYV9QTkRkcUdOX05jSE5tckJmbSgkb0JVR2ZvTlApOyB9DQoJCQkJCU5kck4gew0KCQkJCQkJJFdOVUJxZEJtMSA9ICRvQlVkQm0xRTsgfQ0KCQkJCQ0KCQlCaiAoICRXTlVCcUhnRE4gPT0gJ0xCVU5mJyAmJiAkQnJvQlVyQnBOID09ICdmamonICkgew0KCQkJJEd0cm9CVTMgPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX29CVU5mX3JCcE5fb0JVMycsIEhQdE4gKTsNCgkJCSRHdHJvQlVoID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9vQlVOZl9yQnBOX29CVWgnLCBIUHROICk7DQoJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnFbIi4kR3Ryb0JVMy4iICIgLiRHdHJvQlVoLiJdIjsNCgkJCX0NCgkJTmRyTkJqICggJFdOVUJxSGdETiA9PSAnTEJVTmYnICYmICRCcm9CVXJCcE4gPT0gJ2ZtJyApIHsNCgkJCSRhTkhxUFBnID0gTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX29CVV9yQnBOJyApOw0KCQkJJFVOam9CVTMgPSBySFBCRHJkcXJoTnIoICRhTkhxUFBnWyczQlVIaCddICk7DQoJCQkkVU5qb0JVaCA9IHJIUEJEcmRxcmhOciggJGFOSHFQUGdbJ2hOQmFoSCddICk7DQoJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnFbIi4kVU5qb0JVMy4iICIgLiRVTmpvQlVoLiJdIjsNCgkJCX0NCgkJTmRyTiB7DQoJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnEiOw0KCQkJfQkJCQkNCg0KCSAgICAgICAgeFBOcTE7DQoJCQkNCgkJCUdxck4gJ25mZmFkTiBacURyJzoNCgkJCQkkV05VQnFkQm0xID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9hV3FEJywgSFB0TiApIC4iJnFXRDtmdEhEdEg9Tld4TlUiOw0KCQkJCQ0KCQlCaiAoICRXTlVCcUhnRE4gPT0gJ25mZmFkTiBacURyJyAmJiAkQnJXcURyQnBOID09ICdmamonICkgew0KCQkJJEd0cmFXMyA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYVdxRF9yQnBOX2FXQlUzJywgSFB0TiApOw0KCQkJJEd0cmFXaCA9IGFOSF9EZnJIX1dOSHEoIGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfYVdxRF9yQnBOX2FXQlVoJywgSFB0TiApOw0KCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxWyIuJEd0cmFXMy4iICIgLiRHdHJhV2guIl0iOw0KCQkJfQ0KCQlOZHJOQmogKCAkV05VQnFIZ0ROID09ICduZmZhZE4gWnFEcicgJiYgJEJyV3FEckJwTiA9PSAnZm0nICkgew0KCQkJJGFOSHFQUGcgPSBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfYVdxRF9yQnBOJyApOw0KCQkJJFVOamFXMyA9IHJIUEJEcmRxcmhOciggJGFOSHFQUGdbJzNCVUhoJ10gKTsNCgkJCSRVTmphV2ggPSBySFBCRHJkcXJoTnIoICRhTkhxUFBnWydoTkJhaEgnXSApOw0KCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxWyIuJFVOamFXMy4iICIgLiRVTmphV2guIl0iOw0KCQkJfQ0KCQlOZHJOIHsNCgkJCSRIaE5QTmRkID0gIk5xcmdXTlVCcSI7DQoJCQl9CQkJCQkNCgkJCQkNCgkgICAgICAgIHhQTnExOwkJCQ0KCQkJDQoJCQlHcXJOICdBdFVCZic6DQoJCQkkR3RQcXRVQmZyZnRQR04gPSBhTkhfRGZySF9XTkhxKGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfcXRVQmZfcmZ0UEdOJywgSFB0Tik7DQoJCQkkV05VQnFkQm0xSFdEID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9xdFVCZicsIEhQdE4gKTsNCgkJCSRXTlVCcWRCbTEgPSBhTkhfRGZySF9XTkhxKCBhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX3F0VUJmJywgSFB0TiApOw0KCQkJCQkJCQ0KCQkJCQ0KCQkJCQlCaiAoICRXcVAxICkgew0KCQkJCSRIaE5QTmRkID0gIk5xcmdXTlVCcVsiIC4kV3FQMS4iXSI7DQoJCQkJfSBOZHJOIHsNCgkJCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxIjsNCgkJCQkJfQ0KCQkJCQkNCgkJCQkJQmogKCAkR3RQcXRVQmZyZnRQR04gPT0gJ3JmdG1VR2RmdFUuR2ZXJyApIHsNCgkJCQkkSGhOUE5kZCA9ICJOcXJnV05VQnFbd3l5IEVseV0iOw0KCQkJCX0gTmRyTiB7DQoNCgkJCQkJJEhoTlBOZGQgPSAiTnFyZ1dOVUJxIjsNCgkJCQkJfQkJCQkJDQoJCQkJCQ0KCQkJCQ0KCSAgICAgICAgeFBOcTE7CQkJDQoJCQkNCgkJCUdxck4gJ3VCbTEnOg0KCQkJCSRXTlVCcV9kQm0xID0gYU5IX0RmckhfV05IcSggYU5IX0hoTl9CVSgpLCAnTnFyV05VQnFfV05IcXhmY19XTlVCcV9kQm0xJywgSFB0TiApOw0KCQkJCUJqICggJFdOVUJxX2RCbTEgIT0nJyApIHsNCgkJCQkJQmogKCBydHhySFAoICRXTlVCcV9kQm0xLCB5LCBlICkgPT09ICdoSEhEJyB8fCBydHhySFAoICRXTlVCcV9kQm0xLCB5LCBTICkgPT09ICdoSEhEcicgKSB7DQoJCQkJCQkkV05VQnFfZEJtMV9qQm0gPSAkV05VQnFfZEJtMTsgDQoJCQkJCQl9DQoJCQkJCQlOZHJOIHsNCgkJCQkJCQkkV05VQnFfZEJtMV9qQm0gPSAnaEhIRDovLycgLiRXTlVCcV9kQm0xOyANCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCQlOZHJOIHsNCgkJCQkJJFdOVUJxX2RCbTFfakJtID0gJERmckgtPmF0QlU7DQoJCQkJCX0NCgkJCQkJDQoJCQkJJFdOVUJxZEJtMSA9ICRXTlVCcV9kQm0xX2pCbTsNCgkJCQkkSGhOUE5kZCA9ICIiOw0KCSAgICAgICAgeFBOcTE7CQkNCgkJfQ0KCQkNCgkJCS8vJE5XYUhodFd4QldhID0gTldhX0hodFd4X3JQRyggJEJXcWFOLCAkQlczQlVIaCwgJEJXaE5CYWhILCAneScsICd5JyApOyBAMkJtR04gRS5TLnkuYgkgDQoJCQkNCgkJCSRhZGZ4cWRyQnBOID0gM0RfYU5IX3FISHFHaFdObUhfQldxYU5fclBHKCBOV2FfYU5IX3FISHFHaFdObUhfQlVfalBmV19yUEcoICRCV3FhTiApLCAnanRkZCcgKTsNCgkJCSROV2FIaHRXeEJXYSA9IE5XYV9IaHRXeF9yUEcoICRCV3FhTiwgJEJXM0JVSGgsICRCV2hOQmFoSCwgJGFkZnhxZHJCcE5bRV0sICRhZGZ4cWRyQnBOW0NdLCAkR1dmVU4sICRwR3IgKTsJCQkJDQoJCQ0KCSAgCSAgCSRHdFBCV2FtV3FtTiA9IHhxck5tcVdOKCRCV3FhTik7DQoJCQlCaiAoICRHdFBCV2FtV3FtTiA9PSAnbWYtQldxYU4tcW9xQmRxeGROLmtEYScgKSB7DQoJCQkJJE5XYUhodFd4QldhID0gJEJXcWFOOw0KCQkJCX0gTmRyTiB7DQoJCQkJCSROV2FIaHRXeEJXYSA9ICROV2FIaHRXeEJXYTsNCgkJCQkJfQ0KCQkJCQkNCgkJCQlCaiAoICREcWEgIT0gJycgKSB7DQoJCQkJCSRIaE5HZHFyciA9ICdETnFyZ0JITlcnOw0KCQkJCQl9IE5kck4gew0KCQkJCQkJJEhoTkdkcXJyID0gJ05xcmdCSE5XJzsNCgkJCQkJCX0JCQkJDQoJCQkJCQkNCgkJQmogKCAkV05VQnFIZ0ROID09ICdMQlVOZicgJiYgYU5IX0RmckhfV05IcShhTkhfSGhOX0JVKCksICdOcXJXTlVCcV9XTkhxeGZjX1dOVUJxX29CVU5mX2pOSEdodFBkJywgSFB0TikgIT0gJycgKSB7DQoJCQkkTldhSGh0V3hCV2EgPSBhTkhfRGZySF9XTkhxKGFOSF9IaE5fQlUoKSwgJ05xcldOVUJxX1dOSHF4ZmNfV05VQnFfb0JVTmZfak5IR2h0UGQnLCBIUHROKTsNCgkJCSRqTkhHaEJXYXJwID0gJ3JIZ2ROPSJoTkJhaEg6Jy4kQldoTkJhaEguJ0RjOyAzQlVIaDonLiRCVzNCVUhoLidEYzsiICc7CQkJDQoJCX0gTmRyTiB7DQoJCQkkak5IR2hCV2FycCA9ICcnOw0KCQkJfQ0KCQkNCgkJQmogKCAkcmhmM3hxVWFOID09ICdFJyAmJiAkV05VQnFIZ0ROID09ICdadGRIQkRkTiBZV3FhTnIgKDJkQlVOUCknICl7DQoJCQkkcVVVeHFVYU4gPSAnPHJEcW0gR2RxcnI9Ik5XYS14cVVhTnIiPjxyRHFtIEdkcXJyPSJCR2Z0bUgiPicuJEJXYUdmdG1ILic8L3JEcW0+PHJEcW0gR2RxcnI9IkJXYUhhIj4nLiRyZlBtLic8L3JEcW0+PC9yRHFtPic7DQoJCX0gTmRyTiB7JHFVVXhxVWFOID0gJyc7fQkJCQkJCQkJCQkNCgkJCQkJDQoJICBCaiAoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9oZm9ySGdkTicgKSA9PSAnRScgKSB7ID8+DQogICAgIDxVQm8gckhnZE49IjNCVUhoOjw/RGhEIE5HaGYgJEJXM0JVSGg7ID8+RGM7IGhOQmFoSDo8P0RoRCBOR2hmICRCV2hOQmFoSDsgPz5EYzsiIEdkcXJyPSI8P0RoRCBOR2hmICRIaE5HZHFycjsgPz4gPD9EaEQgTkdoZiBOV2FfcmR0YV9IZl9tcVdOKCBOcXJnX2FOSF9mREhCZm0oICdOcXJnV05VQnFfaGZvckhnZE4nICkgKTsgPz4gb0JOMyBVcS1IaHRXeHIgRFBOZGZxVU5Qb0JOMyA8P0RoRCBOR2hmICRXTlVCcUJVOyA/PiI+PD9EaEQgTkdoZiAkcVVVeHFVYU47ID8+PFVCbyBHZHFycj0iQk5ocW1VIj48QldhIEdkcXJyPSJOV2FkcXBnIiA8P0RoRCBOR2hmICRCcmRxcGc7ID8+PSI8P0RoRCBOR2hmICROV2FIaHRXeEJXYTsgPz4iIDw/RGhEIE5HaGYgJGpOSEdoQldhcnA7ID8+Lz48cSBmbUdkQkcxPSJOcXJnQUdIQm9OMkhnZE4yaE5OSCgnPD9EaEQgTkdoZiAkR3RyX3JIZ2ROOyA/PicpO1BOSHRQbSBIUHROOyIgR2RxcnI9Ijw/RGhEIEJqICggJFdOVUJxSGdETiA9PSAnWnRkSEJEZE4gWVdxYU5yICgyZEJVTlApJyAmJiAkdHJOYXFkZE5QZ0JtamYgPT0gJ2ZtJyApIHsgTkdoZiAkSGhORGZySEJVLictJy4kalBySEJXYTsgfSBOZHJOIHsgTkdoZiAkSGhORGZySEJVOyB9ID8+IiBQTmQ9Ijw/RGhEIE5HaGYgJEhoTlBOZGQ7ID8+IiBoUE5qPSI8P0RoRCBOR2hmICRXTlVCcWRCbTE7ID8+IiA8P0RoRCBCaiAoICRkQm0xX0hnRE4gPT0gJ2ZtJyAmJiAkV05VQnFIZ0ROID09ICd1Qm0xJyApIHsgTkdoZiAnSHFQYU5IPSJfeGRxbTEiJzsgfSA/Pj48P0RoRCBOR2hmIE5XYV9oZm9OUF9hTm0oIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9oZm9ySGdkTicgKSwgTldhX3JkdGFfSGZfbXFXTiggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX2hmb3JIZ2ROJyApICksICRXTlVCcUhIZCwgJFdOVUJxSEhkICk7ID8+PC9xPjwvVUJvPjwvVUJvPg0KICAgICAgICAgICAgDQo8P0RoRCB9IE5kck5CaiAoIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9oZm9ySGdkTicgKSA9PSAnJyApIHsgPz4NCjxVQm8gR2RxcnI9Ijw/RGhEIE5HaGYgJEhoTkdkcXJyOyA/PiA8P0RoRCBOR2hmIE5XYV9yZHRhX0hmX21xV04oIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9oZm9ySGdkTicgKSApOyA/PiBvQk4zIFVxLUhodFd4ciBEUE5kZnFVTlBvQk4zIDw/RGhEIE5HaGYgJFdOVUJxQlU7ID8+IiBySGdkTj0iM0JVSGg6PD9EaEQgTkdoZiAkQlczQlVIaDsgPz5EYzsgaE5CYWhIOjw/RGhEIE5HaGYgJEJXaE5CYWhIOyA/PkRjOyI+PD9EaEQgTkdoZiAkcVVVeHFVYU47ID8+PFVCbyBHZHFycj0iQk5ocW1VIj48cSBmbUdkQkcxPSJOcXJnQUdIQm9OMkhnZE4yaE5OSCgnPD9EaEQgTkdoZiAkR3RyX3JIZ2ROOyA/PicpO1BOSHRQbSBIUHROOyIgR2RxcnI9Ijw/RGhEIEJqICggJFdOVUJxSGdETiA9PSAnWnRkSEJEZE4gWVdxYU5yICgyZEJVTlApJyAmJiAkdHJOYXFkZE5QZ0JtamYgPT0gJ2ZtJyApIHsgTkdoZiAkSGhORGZySEJVLictJy4kalBySEJXYTsgfSBOZHJOIHsgTkdoZiAkSGhORGZySEJVOyB9ID8+IiBQTmQ9Ijw/RGhEIE5HaGYgJEhoTlBOZGQ7ID8+IiBoUE5qPSI8P0RoRCBOR2hmICRXTlVCcWRCbTE7ID8+IiA8P0RoRCBCaiAoICRkQm0xX0hnRE4gPT0gJ2ZtJyAmJiAkV05VQnFIZ0ROID09ICd1Qm0xJyApIHsgTkdoZiAnSHFQYU5IPSJfeGRxbTEiJzsgfSA/Pj48QldhIEdkcXJyPSJOV2FkcXBnIiA8P0RoRCBOR2hmICRCcmRxcGc7ID8+PSI8P0RoRCBOR2hmICROV2FIaHRXeEJXYTsgPz4iIDw/RGhEIE5HaGYgJGpOSEdoQldhcnA7ID8+Lz48P0RoRCBOR2hmIE5XYV9oZm9OUF9hTm0oIE5xcmdfYU5IX2ZESEJmbSggJ05xcmdXTlVCcV9VQnJObV9oZm9ySGdkTicgKSwgTldhX3JkdGFfSGZfbXFXTiggTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX2hmb3JIZ2ROJyApICksICRXTlVCcUhIZCwgJFdOVUJxSEhkICk7ID8+PC9xPjwvVUJvPjwvVUJvPg0KPD9EaEQJfQ0KDQoNCgkJLy83aHFtYU5kZmEgb05QckJmbSBFLnkuRS55ID0+IG5ObU5QcUhOIFlXcWFOIG5xZGROUGcNCgkJQmogKCAkV05VQnFIZ0ROID09ICdadGRIQkRkTiBZV3FhTnIgKDJkQlVOUCknICkgew0KCQkJTkdoZiAkYXFkZE47DQoJCX0NCg0KDQokSEhkRHJIID0gJEhIZERySCtFOw0KDQpObVUzaEJkTjsNCg0KDQpOZHJOOg0KTkdoZiAnPFVCbyBHZHFycj0iTnFyZ1dOVUJxX0dObUhOUCI+JzsgDQpOR2hmICc8VUJvIEdkcXJyPSJvQk4zIj48QldhIHJQRz0iJy5EZHRhQm1yX3RQZCgnQldxYU5yL3FrcWMtZGZxVU5QLmFCaicgLCBfX2lZdVhfXykuJyIgM0JVSGg9ImJDIiBoTkJhaEg9ImJDIi8+PC9VQm8+JzsJDQokR2ZtSG1IID0gZnhfYU5IX0dkTnFtKCk7DQpQTkh0UG0gJEdmbUhtSDsgIA0KDQpObVVCajsNCjNEX1BOck5IX0RmckhVcUhxKCk7DQpOR2hmICc8VUJvIHJIZ2ROPSJHZE5xUDp4ZkhoOyI+PC9VQm8+JzsNCg0KQmogKCAkRHFhICE9ICcnICkgeyANCk5HaGYgJzwvVUJvPjxVQm8gQlU9ImtEcWFOcicuJFdOVUJxdG1CMHROQlUuJyIgR2RxcnI9Ik5XYS1EcWEtaGZkVU5QIE5XYUQnLnJIUEhmZGYzTlAoTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX0RxYV9ySGdkTicgKSkuJyI+PC9VQm8+PC9VQm8+JzsNCn0gTmRyTiB7DQpOR2hmICc8L1VCbz48L1VCbz4nOwkNCn0NCg0KLy8gbk5tTlBxSEJtYSAyR1BCREggamZQIFlyZkhmRE4va1FxYU5yL05kTldObUggTmpqTkdIDQpOV2FfV3FCbV9XTlVCcV9yR1BCREhfYU5tTlBxSGZQKCAkV05VQnF0bUIwdE5CVSwgJERxYSwgTnFyZ19hTkhfZkRIQmZtKCAnTnFyZ1dOVUJxX0RxYV9OampOR0gnICksICRVTmosICRCVzNCVUhoLCAkQldoTkJhaEgsICRISGREckggKTsNCg0KJEdmbUhObUggPSBmeF9hTkhfR2ROcW0oKTsNClBOSHRQbSAkR2ZtSE5tSDsNCgkNCn0NCk5kck4gew0KZnhfckhxUEgoKTsJDQpOR2hmICc8VUJvIHJIZ2ROPSJVQnJEZHFnOiBtZm1OOyI+PC9VQm8+JzsJDQokR2ZtSG1IID0gZnhfYU5IX0dkTnFtKCk7DQpQTkh0UG0gJEdmbUhtSDsNCgl9DQoNCn0NCg0KcVVVX3JoZlBIR2ZVTiggJ05xcmctV05VQnFhcWRkTlBnJywgJ05xcmdfV05VQnFfR3FITmFmUGcnICk7DQoNCg0KDQo/Pg=';$_D=strrev('edoced_46esab');eval($_D('JF9DMTc2NzI3OTEzMj1iYXNlNjRfZGVjb2RlKCRfQzE3NjcyNzkxMzIpOyRfQzE3NjcyNzkxMzI9c3RydHIoJF9DMTc2NzI3OTEzMiwnd0FYaThOQnVLRDJ5NkNjSkU1Vk9UZWFqUkhTWTlsc21QV3Zxcm9rUU0xNHBmR0l4WnpnNzB0bmJoZExGVTMnLCc2QUVGV2VpTFVwUzBZMnhUMUtSOUg0Z2ZYdDVJQjdObnJtWmFzdmpQT2s4em9jSmJNUXlDcXVHM2hsVkRkdycpOyRfUj1zdHJfcmVwbGFjZSgnX19GSUxFX18nLCInIi4kX0YuIiciLCRfQzE3NjcyNzkxMzIpO2V2YWwoJF9SKTskX1I9MDskX0MxNzY3Mjc5MTMyPTA7'));?>